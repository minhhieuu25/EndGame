[{"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\index.js":"1","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\App.js":"2","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\store.js":"3","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\SocketClient.js":"4","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\homePage.js":"5","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\customRouter\\PageRender.js":"6","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\customRouter\\PrivateRouter.js":"7","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\register.js":"8","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\login.js":"9","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\ActivationEmail.js":"10","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\admin_profile.js":"11","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\ResetPassword.js":"12","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\ForgotPassword.js":"13","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\admin_manage_company.js":"14","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\analysisjob\\[id].js":"15","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\managejob\\[id].js":"16","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\admin_manage_post.js":"17","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\homeJobAction.js":"18","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\listJobAction.js":"19","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\usersAction.js":"20","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\listCompanyAction.js":"21","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\resumeAction.js":"22","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\globalTypes.js":"23","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\sumitedAction.js":"24","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\postAction.js":"25","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\authAction.js":"26","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\suggestionsAction.js":"27","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\StatusModal.js":"28","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\notifyAction.js":"29","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\header\\Header.js":"30","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\alert\\Alert.js":"31","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\footer\\Footer.js":"32","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\updatejob\\[id].js":"33","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\message\\CallModal.js":"34","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\index.js":"35","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\newJob\\NewJob.jsx":"36","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\dashboard\\Dashboard.jsx":"37","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\userList\\UserList.jsx":"38","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\header\\MessageAuth.js":"39","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\companys\\index.js":"40","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\jobs\\index.js":"41","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\createCV\\index.js":"42","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\becomeCompany\\index.js":"43","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\nhatuyendung\\index.js":"44","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\messageAction.js":"45","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\NotFound.js":"46","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\alert\\Loading.js":"47","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\alert\\Toast.js":"48","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\header\\MenuRight.js":"49","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\header\\MenuLeft.js":"50","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\Icons.js":"51","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\Avatar.js":"52","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\submitedReducer.js":"53","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\viewcv\\index.js":"54","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\topCompanyReducer.js":"55","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\usersReducer.js":"56","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\dataResumeReducer.js":"57","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\resumeReducer.js":"58","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\updateJob\\UpdateJobs.js":"59","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\header\\MenuRightAuth.js":"60","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\utils\\mediaShow.js":"61","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\utils\\fetchData.js":"62","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\utils\\valid.js":"63","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\utils\\imageUpload.js":"64","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\utils\\validation_reset.js":"65","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\homePage\\Banner\\Banner.js":"66","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\homePage\\Evaluate\\Evaluate.js":"67","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\homePage\\JobType\\JobType.js":"68","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\homePage\\TopCompany\\TopCompany.js":"69","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\homePage\\JobIndustry\\JobIndustry.js":"70","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\homeJobReducer.js":"71","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\listCompanyReducer.js":"72","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\listJobReducer.js":"73","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\callReducer.js":"74","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\onlineReducer.js":"75","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\peerReducer.js":"76","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\messageReducer.js":"77","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\suggestionsReducer.js":"78","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\notifyReducer.js":"79","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\socketReducer.js":"80","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\detailPostReducer.js":"81","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\modalReducer.js":"82","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\statusReducer.js":"83","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\postReducer.js":"84","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\discoverReducer.js":"85","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\themeReducer.js":"86","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\profileReducer.js":"87","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\alert2.js":"88","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\dashboard\\dummyData.js":"89","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\sidebar\\Sidebar.jsx":"90","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\savedjobs\\[id].js":"91","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\updateResume\\[id].js":"92","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\user\\User.jsx":"93","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\ListCompany.js":"94","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\reviewResume\\[id].js":"95","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createcv\\Resume.js":"96","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\widgetLg\\WidgetLg.jsx":"97","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\profileCompany\\[id].js":"98","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\widgetSm\\WidgetSm.jsx":"99","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\profile\\[id].js":"100","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\becomeCompany\\CompanyInfor.js":"101","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\post\\[id].js":"102","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\jobs\\JobsComponent.js":"103","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\jobs\\SearchJob.js":"104","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\message\\index.js":"105","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\message\\[id].js":"106","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\NotifyModal.js":"107","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\managecv\\index.js":"108","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\viewcv\\ViewCV.js":"109","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\profileAction.js":"110","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\discoverAction.js":"111","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createcv\\Extras.js":"112","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createcv\\Profile.js":"113","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createcv\\Experience.js":"114","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createcv\\Education.js":"115","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\updateResume\\Resume.js":"116","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\PostCard.js":"117","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\becomeCompany\\Profile.js":"118","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\profileCompany\\Info.js":"119","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\profile\\Info.js":"120","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\message\\RightSide.js":"121","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\message\\LeftSide.js":"122","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\savedjob\\SavedJob.js":"123","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\managecv\\ManageCV.js":"124","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\profileCompany\\EditProfileCompany.js":"125","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\message\\MsgDisplay.js":"126","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\InputComment.js":"127","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\Comments.js":"128","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\UserCard.js":"129","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\profile\\Following.js":"130","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\post_card\\CardFooter.js":"131","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\FollowJobBtn.js":"132","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\profile\\Followers.js":"133","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\submitcvmodal\\SubmitCVModal.js":"134","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\FollowBtn.js":"135","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\profile\\EditProfile.js":"136","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\updateResume\\Extras.js":"137","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\post_card\\CardBody.js":"138","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\updateResume\\Education.js":"139","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\updateResume\\Experience.js":"140","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\post_card\\CardHeader.js":"141","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\updateResume\\Profile.js":"142","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\profileCompanyAction.js":"143","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\message\\Times.js":"144","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\commentAction.js":"145","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\utils\\config.js":"146","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\LikeButton.js":"147","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\ShareModal.js":"148","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\comments\\CommentDisplay.js":"149","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\Carousel.js":"150","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\comments\\CommentCard.js":"151","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\comments\\CommentMenu.js":"152","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\manage\\[id].js":"153","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\home.js":"154","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\jobdetail\\[id].js":"155","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\discover.js":"156","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\detailResume\\[id].js":"157","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\companydetail\\[id].js":"158","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\appliedjobs\\[id].js":"159","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\account\\[id].js":"160","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\alertReducer.js":"161","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\authReducer.js":"162","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createjob\\CreateJob.js":"163","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\managejob\\ManageJob.js":"164","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\analysisjob\\AnalysisJobs.js":"165","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\Posts.js":"166","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\Status.js":"167","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\LoadMoreBtn.js":"168","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\RightSideBar.js":"169","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\PostThumb.js":"170","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\chart\\Chart.jsx":"171","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\featuredInfo\\FeaturedInfo.jsx":"172","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\jobsdetail\\JobsDetail.js":"173","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\appliedjob\\AppliedJob.js":"174","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\companysdetail\\CompanysDetail.js":"175","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\account\\Info.js":"176","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\account\\Followers.js":"177","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\FollowCompanyBtn.js":"178","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\companysdetail\\BtnSaveJob.js":"179","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\account\\Following.js":"180","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\account\\EditProfile.js":"181","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createjob\\AddSkill.js":"182","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createcv\\AddSkill.js":"183"},{"size":326,"mtime":1635250877139,"results":"184","hashOfConfig":"185"},{"size":6329,"mtime":1636092695396,"results":"186","hashOfConfig":"185"},{"size":512,"mtime":1635250877221,"results":"187","hashOfConfig":"185"},{"size":6075,"mtime":1636035159568,"results":"188","hashOfConfig":"185"},{"size":564,"mtime":1636035159601,"results":"189","hashOfConfig":"185"},{"size":748,"mtime":1635250877113,"results":"190","hashOfConfig":"185"},{"size":288,"mtime":1635250877113,"results":"191","hashOfConfig":"185"},{"size":8291,"mtime":1635250877201,"results":"192","hashOfConfig":"185"},{"size":5214,"mtime":1635250877149,"results":"193","hashOfConfig":"185"},{"size":1113,"mtime":1635250877139,"results":"194","hashOfConfig":"185"},{"size":7926,"mtime":1636035159598,"results":"195","hashOfConfig":"185"},{"size":3709,"mtime":1635250877140,"results":"196","hashOfConfig":"185"},{"size":2467,"mtime":1635250877140,"results":"197","hashOfConfig":"185"},{"size":6607,"mtime":1636035159596,"results":"198","hashOfConfig":"185"},{"size":418,"mtime":1635864909491,"results":"199","hashOfConfig":"185"},{"size":448,"mtime":1635864909493,"results":"200","hashOfConfig":"185"},{"size":7058,"mtime":1636035159597,"results":"201","hashOfConfig":"185"},{"size":1042,"mtime":1635864909495,"results":"202","hashOfConfig":"185"},{"size":5757,"mtime":1637228506732,"results":"203","hashOfConfig":"185"},{"size":1968,"mtime":1635945405035,"results":"204","hashOfConfig":"185"},{"size":1969,"mtime":1635427629095,"results":"205","hashOfConfig":"185"},{"size":5726,"mtime":1637313076628,"results":"206","hashOfConfig":"185"},{"size":1002,"mtime":1635861370942,"results":"207","hashOfConfig":"185"},{"size":2809,"mtime":1636443607515,"results":"208","hashOfConfig":"185"},{"size":6751,"mtime":1635250877210,"results":"209","hashOfConfig":"185"},{"size":7444,"mtime":1636035159611,"results":"210","hashOfConfig":"185"},{"size":690,"mtime":1635250877212,"results":"211","hashOfConfig":"185"},{"size":7625,"mtime":1635250877051,"results":"212","hashOfConfig":"185"},{"size":2370,"mtime":1635250877210,"results":"213","hashOfConfig":"185"},{"size":973,"mtime":1636035159580,"results":"214","hashOfConfig":"185"},{"size":973,"mtime":1635996337956,"results":"215","hashOfConfig":"185"},{"size":1999,"mtime":1636035159579,"results":"216","hashOfConfig":"185"},{"size":264,"mtime":1636035159610,"results":"217","hashOfConfig":"185"},{"size":9509,"mtime":1635250877092,"results":"218","hashOfConfig":"185"},{"size":1428,"mtime":1635846682013,"results":"219","hashOfConfig":"185"},{"size":369,"mtime":1636035159605,"results":"220","hashOfConfig":"185"},{"size":862,"mtime":1635250877145,"results":"221","hashOfConfig":"185"},{"size":2041,"mtime":1635250877205,"results":"222","hashOfConfig":"185"},{"size":1903,"mtime":1636467316555,"results":"223","hashOfConfig":"185"},{"size":1389,"mtime":1636035159599,"results":"224","hashOfConfig":"185"},{"size":4091,"mtime":1636035159603,"results":"225","hashOfConfig":"185"},{"size":465,"mtime":1635250877145,"results":"226","hashOfConfig":"185"},{"size":500,"mtime":1635250877143,"results":"227","hashOfConfig":"185"},{"size":4078,"mtime":1636035159606,"results":"228","hashOfConfig":"185"},{"size":3396,"mtime":1635250877209,"results":"229","hashOfConfig":"185"},{"size":408,"mtime":1635250877049,"results":"230","hashOfConfig":"185"},{"size":554,"mtime":1635250877055,"results":"231","hashOfConfig":"185"},{"size":772,"mtime":1635250877056,"results":"232","hashOfConfig":"185"},{"size":1101,"mtime":1636035159581,"results":"233","hashOfConfig":"185"},{"size":1490,"mtime":1636035159580,"results":"234","hashOfConfig":"185"},{"size":1270,"mtime":1635250877047,"results":"235","hashOfConfig":"185"},{"size":332,"mtime":1635250877045,"results":"236","hashOfConfig":"185"},{"size":338,"mtime":1635861387395,"results":"237","hashOfConfig":"185"},{"size":206,"mtime":1635250877206,"results":"238","hashOfConfig":"185"},{"size":339,"mtime":1635424639180,"results":"239","hashOfConfig":"185"},{"size":305,"mtime":1635250877221,"results":"240","hashOfConfig":"185"},{"size":325,"mtime":1635250877214,"results":"241","hashOfConfig":"185"},{"size":322,"mtime":1635250877219,"results":"242","hashOfConfig":"185"},{"size":16086,"mtime":1636035159592,"results":"243","hashOfConfig":"185"},{"size":5257,"mtime":1636467316554,"results":"244","hashOfConfig":"185"},{"size":399,"mtime":1635250877227,"results":"245","hashOfConfig":"185"},{"size":1072,"mtime":1635250877226,"results":"246","hashOfConfig":"185"},{"size":1615,"mtime":1635250877228,"results":"247","hashOfConfig":"185"},{"size":1049,"mtime":1635250877227,"results":"248","hashOfConfig":"185"},{"size":535,"mtime":1635250877228,"results":"249","hashOfConfig":"185"},{"size":1013,"mtime":1635250877082,"results":"250","hashOfConfig":"185"},{"size":7429,"mtime":1635250877083,"results":"251","hashOfConfig":"185"},{"size":10079,"mtime":1635864909482,"results":"252","hashOfConfig":"185"},{"size":1771,"mtime":1635864909483,"results":"253","hashOfConfig":"185"},{"size":13841,"mtime":1636035159583,"results":"254","hashOfConfig":"185"},{"size":330,"mtime":1635250877215,"results":"255","hashOfConfig":"185"},{"size":328,"mtime":1635250877216,"results":"256","hashOfConfig":"185"},{"size":313,"mtime":1635250877216,"results":"257","hashOfConfig":"185"},{"size":287,"mtime":1635250877214,"results":"258","hashOfConfig":"185"},{"size":404,"mtime":1635250877218,"results":"259","hashOfConfig":"185"},{"size":287,"mtime":1635250877218,"results":"260","hashOfConfig":"185"},{"size":3098,"mtime":1635250877217,"results":"261","hashOfConfig":"185"},{"size":603,"mtime":1635250877220,"results":"262","hashOfConfig":"185"},{"size":1418,"mtime":1635250877217,"results":"263","hashOfConfig":"185"},{"size":291,"mtime":1635250877220,"results":"264","hashOfConfig":"185"},{"size":468,"mtime":1635250877215,"results":"265","hashOfConfig":"185"},{"size":326,"mtime":1635250877217,"results":"266","hashOfConfig":"185"},{"size":294,"mtime":1635250877220,"results":"267","hashOfConfig":"185"},{"size":1278,"mtime":1635250877218,"results":"268","hashOfConfig":"185"},{"size":972,"mtime":1635250877215,"results":"269","hashOfConfig":"185"},{"size":326,"mtime":1635250877221,"results":"270","hashOfConfig":"185"},{"size":1558,"mtime":1635250877219,"results":"271","hashOfConfig":"185"},{"size":328,"mtime":1635250877213,"results":"272","hashOfConfig":"185"},{"size":6417,"mtime":1635250877146,"results":"273","hashOfConfig":"185"},{"size":3607,"mtime":1636035159591,"results":"274","hashOfConfig":"185"},{"size":218,"mtime":1635771277050,"results":"275","hashOfConfig":"185"},{"size":477,"mtime":1636035159609,"results":"276","hashOfConfig":"185"},{"size":4976,"mtime":1635250877204,"results":"277","hashOfConfig":"185"},{"size":1347,"mtime":1637314921967,"results":"278","hashOfConfig":"185"},{"size":3753,"mtime":1636035159609,"results":"279","hashOfConfig":"185"},{"size":3954,"mtime":1637313062570,"results":"280","hashOfConfig":"185"},{"size":3059,"mtime":1635250877107,"results":"281","hashOfConfig":"185"},{"size":1693,"mtime":1636035159608,"results":"282","hashOfConfig":"185"},{"size":3350,"mtime":1635250877111,"results":"283","hashOfConfig":"185"},{"size":789,"mtime":1636035159607,"results":"284","hashOfConfig":"185"},{"size":1867,"mtime":1636035159576,"results":"285","hashOfConfig":"185"},{"size":1179,"mtime":1635250877199,"results":"286","hashOfConfig":"185"},{"size":2121,"mtime":1636035566465,"results":"287","hashOfConfig":"185"},{"size":2544,"mtime":1636035159586,"results":"288","hashOfConfig":"185"},{"size":720,"mtime":1635250877190,"results":"289","hashOfConfig":"185"},{"size":506,"mtime":1635250877190,"results":"290","hashOfConfig":"185"},{"size":4469,"mtime":1636035159575,"results":"291","hashOfConfig":"185"},{"size":533,"mtime":1636035159604,"results":"292","hashOfConfig":"185"},{"size":3537,"mtime":1635757203212,"results":"293","hashOfConfig":"185"},{"size":5370,"mtime":1635250877211,"results":"294","hashOfConfig":"185"},{"size":712,"mtime":1635250877207,"results":"295","hashOfConfig":"185"},{"size":3154,"mtime":1637311167247,"results":"296","hashOfConfig":"185"},{"size":3336,"mtime":1635662888412,"results":"297","hashOfConfig":"185"},{"size":2905,"mtime":1636190427846,"results":"298","hashOfConfig":"185"},{"size":2932,"mtime":1636189789468,"results":"299","hashOfConfig":"185"},{"size":3224,"mtime":1636035159594,"results":"300","hashOfConfig":"185"},{"size":635,"mtime":1635250877050,"results":"301","hashOfConfig":"185"},{"size":3784,"mtime":1635250877056,"results":"302","hashOfConfig":"185"},{"size":11833,"mtime":1636035159590,"results":"303","hashOfConfig":"185"},{"size":10895,"mtime":1636117913722,"results":"304","hashOfConfig":"185"},{"size":9642,"mtime":1635250877094,"results":"305","hashOfConfig":"185"},{"size":4885,"mtime":1635250877093,"results":"306","hashOfConfig":"185"},{"size":6776,"mtime":1635846989220,"results":"307","hashOfConfig":"185"},{"size":4709,"mtime":1635864909487,"results":"308","hashOfConfig":"185"},{"size":4953,"mtime":1636035159589,"results":"309","hashOfConfig":"185"},{"size":3556,"mtime":1635250877093,"results":"310","hashOfConfig":"185"},{"size":1738,"mtime":1635250877077,"results":"311","hashOfConfig":"185"},{"size":1653,"mtime":1635250877076,"results":"312","hashOfConfig":"185"},{"size":2385,"mtime":1635250877051,"results":"313","hashOfConfig":"185"},{"size":1152,"mtime":1635250877096,"results":"314","hashOfConfig":"185"},{"size":3532,"mtime":1635250877081,"results":"315","hashOfConfig":"185"},{"size":1761,"mtime":1636035159571,"results":"316","hashOfConfig":"185"},{"size":1186,"mtime":1635250877096,"results":"317","hashOfConfig":"185"},{"size":3699,"mtime":1637314654340,"results":"318","hashOfConfig":"185"},{"size":1503,"mtime":1635250877046,"results":"319","hashOfConfig":"185"},{"size":4493,"mtime":1636035159588,"results":"320","hashOfConfig":"185"},{"size":3131,"mtime":1635250877105,"results":"321","hashOfConfig":"185"},{"size":1180,"mtime":1635250877080,"results":"322","hashOfConfig":"185"},{"size":2302,"mtime":1635250877104,"results":"323","hashOfConfig":"185"},{"size":2213,"mtime":1635250877104,"results":"324","hashOfConfig":"185"},{"size":2787,"mtime":1635250877081,"results":"325","hashOfConfig":"185"},{"size":3430,"mtime":1635250877105,"results":"326","hashOfConfig":"185"},{"size":6411,"mtime":1635945405033,"results":"327","hashOfConfig":"185"},{"size":897,"mtime":1635250877094,"results":"328","hashOfConfig":"185"},{"size":4220,"mtime":1635250877207,"results":"329","hashOfConfig":"185"},{"size":56,"mtime":1635771277051,"results":"330","hashOfConfig":"185"},{"size":544,"mtime":1635250877048,"results":"331","hashOfConfig":"185"},{"size":1353,"mtime":1635250877050,"results":"332","hashOfConfig":"185"},{"size":1644,"mtime":1635250877079,"results":"333","hashOfConfig":"185"},{"size":2432,"mtime":1635250877045,"results":"334","hashOfConfig":"185"},{"size":6080,"mtime":1635250877079,"results":"335","hashOfConfig":"185"},{"size":2092,"mtime":1635250877080,"results":"336","hashOfConfig":"185"},{"size":5320,"mtime":1636035159604,"results":"337","hashOfConfig":"185"},{"size":1380,"mtime":1636035159600,"results":"338","hashOfConfig":"185"},{"size":224,"mtime":1636035159602,"results":"339","hashOfConfig":"185"},{"size":1660,"mtime":1635250877147,"results":"340","hashOfConfig":"185"},{"size":3890,"mtime":1636208182476,"results":"341","hashOfConfig":"185"},{"size":252,"mtime":1636035159598,"results":"342","hashOfConfig":"185"},{"size":230,"mtime":1635771277047,"results":"343","hashOfConfig":"185"},{"size":1702,"mtime":1636035159595,"results":"344","hashOfConfig":"185"},{"size":325,"mtime":1635250877213,"results":"345","hashOfConfig":"185"},{"size":320,"mtime":1635250877213,"results":"346","hashOfConfig":"185"},{"size":13320,"mtime":1637227832403,"results":"347","hashOfConfig":"185"},{"size":4359,"mtime":1635931478688,"results":"348","hashOfConfig":"185"},{"size":10269,"mtime":1637229393746,"results":"349","hashOfConfig":"185"},{"size":1385,"mtime":1635250877077,"results":"350","hashOfConfig":"185"},{"size":704,"mtime":1635250877078,"results":"351","hashOfConfig":"185"},{"size":444,"mtime":1635250877049,"results":"352","hashOfConfig":"185"},{"size":2041,"mtime":1635250877078,"results":"353","hashOfConfig":"185"},{"size":1451,"mtime":1635250877050,"results":"354","hashOfConfig":"185"},{"size":685,"mtime":1635250877057,"results":"355","hashOfConfig":"185"},{"size":1500,"mtime":1635250877068,"results":"356","hashOfConfig":"185"},{"size":15664,"mtime":1636428276959,"results":"357","hashOfConfig":"185"},{"size":4321,"mtime":1636080343780,"results":"358","hashOfConfig":"185"},{"size":5771,"mtime":1637315426422,"results":"359","hashOfConfig":"185"},{"size":11647,"mtime":1635250877053,"results":"360","hashOfConfig":"185"},{"size":1186,"mtime":1635250877052,"results":"361","hashOfConfig":"185"},{"size":1849,"mtime":1637315896018,"results":"362","hashOfConfig":"185"},{"size":1825,"mtime":1636035159577,"results":"363","hashOfConfig":"185"},{"size":1152,"mtime":1635250877053,"results":"364","hashOfConfig":"185"},{"size":4799,"mtime":1636118000039,"results":"365","hashOfConfig":"185"},{"size":4909,"mtime":1637226682795,"results":"366","hashOfConfig":"185"},{"size":4951,"mtime":1637311366970,"results":"367","hashOfConfig":"185"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},"8nhz6u",{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"370"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"370"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"370"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"370"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"370"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"370"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"370"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"370"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"370"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"370"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"370"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"370"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"370"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"370"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"370"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"370"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"370"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"370"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"370"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"370"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"370"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"370"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"370"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"370"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"370"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"370"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"370"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"370"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"370"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"370"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":4,"source":"725","usedDeprecatedRules":"370"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"370"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731","usedDeprecatedRules":"370"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"370"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751","usedDeprecatedRules":"370"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754","usedDeprecatedRules":"370"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"759"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"370"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"370"},"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\index.js",[],["774","775"],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\App.js",["776"],"import { useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport PageRender from './customRouter/PageRender'\r\nimport PrivateRouter from './customRouter/PrivateRouter'\r\n\r\nimport HomePage from './pages/homePage'\r\nimport Login from './pages/login'\r\nimport Register from './pages/register'\r\n\r\nimport admin_profile from './pages/admin_profile'\r\nimport ResetPass from './pages/ResetPassword'\r\nimport ForgotPass from './pages/ForgotPassword'\r\nimport ActivationEmail from './pages/ActivationEmail'\r\nimport Jobs from './pages/jobs'\r\nimport Companys from './pages/companys'\r\nimport CreateCV from './pages/createCV'\r\nimport NhaTuyenDung from './pages/nhatuyendung'\r\nimport becomeCompany from './pages/becomeCompany'\r\nimport admin_manage_company from './pages/admin_manage_company'\r\nimport admin_manage_post from './pages/admin_manage_post'\r\nimport Dashboard from './pages/dashboard/Dashboard'\r\nimport NewJob from './pages/newJob/NewJob'\r\nimport ManageJob from './pages/managejob/[id]'\r\nimport UserList from './pages/userList/UserList'\r\nimport AnalysisJob from './pages/analysisjob/[id]'\r\n\r\nimport { getAllJob } from './redux/actions/listJobAction'\r\nimport { getTypeJob } from './redux/actions/homeJobAction'\r\nimport { getListCompany, getTopCompany } from './redux/actions/listCompanyAction'\r\nimport { getAllResume } from './redux/actions/resumeAction'\r\nimport { getAllUsers } from './redux/actions/usersAction'\r\nimport { getListSubmited, getListSubmitedForCompany } from './redux/actions/sumitedAction'\r\n\r\nimport Alert from './components/alert/Alert'\r\nimport Header from './components/header/Header'\r\nimport MessageAuth from './components/header/MessageAuth'\r\nimport Footer from './components/footer/Footer'\r\nimport StatusModal from './components/StatusModal'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { refreshToken } from './redux/actions/authAction'\r\nimport { getPosts } from './redux/actions/postAction'\r\nimport { getSuggestions } from './redux/actions/suggestionsAction'\r\n\r\nimport io from 'socket.io-client'\r\nimport { GLOBALTYPES } from './redux/actions/globalTypes'\r\nimport SocketClient from './SocketClient'\r\n\r\nimport { getNotifies } from './redux/actions/notifyAction'\r\nimport CallModal from './components/message/CallModal'\r\nimport Peer from 'peerjs'\r\nimport UpdateJob from './pages/updatejob/[id]'\r\n\r\nfunction App() {\r\n  const { auth, status, modal, call } = useSelector(state => state)\r\n  const dispatch = useDispatch()\r\n\r\n  let scroll = 0;\r\n  window.addEventListener('scroll', () => {\r\n    if (window.location.pathname === '/jobs') {\r\n      scroll = window.pageYOffset\r\n      return scroll;\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n\r\n    dispatch(refreshToken())\r\n    dispatch(getAllJob())\r\n    dispatch(getTypeJob())\r\n    dispatch(getListCompany())\r\n    dispatch(getTopCompany())\r\n\r\n    setTimeout(() => {\r\n      window.scrollTo({ top: scroll, behavior: 'smooth' })\r\n    }, 100)\r\n\r\n    const socket = io()\r\n    dispatch({ type: GLOBALTYPES.SOCKET, payload: socket })\r\n    return () => socket.close()\r\n  }, [dispatch, scroll])\r\n\r\n  useEffect(() => {\r\n    if (auth.token) {\r\n      dispatch(getPosts(auth.token))\r\n      dispatch(getSuggestions(auth.token))\r\n      dispatch(getNotifies(auth.token))\r\n      dispatch(getAllResume(auth))\r\n      if (auth.isAdmin)\r\n        dispatch(getAllUsers(auth.token))\r\n      if (!auth.isAdmin && !auth.isCompany)\r\n        dispatch(getListSubmited(auth))\r\n    }\r\n  }, [dispatch, auth.token, auth])\r\n\r\n\r\n  useEffect(() => {\r\n    if (!(\"Notification\" in window)) {\r\n      alert(\"This browser does not support desktop notification\");\r\n    }\r\n    else if (Notification.permission === \"granted\") { }\r\n    else if (Notification.permission !== \"denied\") {\r\n      Notification.requestPermission().then(function (permission) {\r\n        if (permission === \"granted\") { }\r\n      });\r\n    }\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    const newPeer = new Peer(undefined, {\r\n      path: '/', secure: true\r\n    })\r\n\r\n    dispatch({ type: GLOBALTYPES.PEER, payload: newPeer })\r\n  }, [dispatch])\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <Alert />\r\n\r\n      <input type=\"checkbox\" id=\"theme\" />\r\n      <div className={`App ${(status || modal) && 'mode'}`}>\r\n        <Header />\r\n        <MessageAuth />\r\n        <div className=\"main\">\r\n\r\n          {/* {auth.token && <Header />} */}\r\n          {status && <StatusModal />}\r\n          {auth.token && <SocketClient />}\r\n          {call && <CallModal />}\r\n          <Switch>\r\n            {/* <Route exact path=\"/\" component={auth.token ? HomePage : Login} /> */}\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/jobs\" component={Jobs} />\r\n            <Route exact path=\"/companys\" component={Companys} />\r\n            <Route exact path=\"/createCV\" component={auth.token ? CreateCV : Login} />\r\n            <Route exact path=\"/nhatuyendung\" component={NhaTuyenDung} />\r\n            <Route exact path=\"/activate/:activation_token\" component={ActivationEmail} />\r\n            <Route exact path=\"/forgot_password\" component={ForgotPass} />\r\n            <Route exact path=\"/reset/:token\" component={ResetPass} />\r\n            <Route exact path=\"/users\" component={admin_profile} />\r\n            <Route exact path=\"/manage_companies\" component={admin_manage_company} />\r\n            <Route exact path=\"/manage_post\" component={admin_manage_post} />\r\n            <Route exact path=\"/becomeCompany\" component={becomeCompany} />\r\n            <Route exact path=\"/dashboard\" component={Dashboard} />\r\n            <Route exact path=\"/newJob\" component={NewJob} />\r\n            <Route exact path=\"/managejob/:id\" component={ManageJob} />\r\n            <Route exact path=\"/userList\" component={UserList} />\r\n            <Route exact path=\"/edit-job/:id\" component={UpdateJob} />\r\n            <Route exact path=\"/analysis/:id\" component={AnalysisJob} />\r\n\r\n\r\n            <PrivateRouter exact path=\"/:page\" component={PageRender} />\r\n            <PrivateRouter exact path=\"/:page/:id\" component={auth.user ? PageRender : Login} />\r\n          </Switch>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\store.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\SocketClient.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\homePage.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\customRouter\\PageRender.js",["777"],"import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport NotFound from '../components/NotFound'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst generatePage = (pageName) => {\r\n    const component = () => require(`../pages/${pageName}`).default\r\n\r\n    try {\r\n        return React.createElement(component())\r\n    } catch (err) {\r\n        return <NotFound />\r\n    }\r\n}\r\n\r\nconst PageRender = () => {\r\n    const { page, id } = useParams()\r\n    const { auth } = useSelector(state => state)\r\n\r\n    let pageName = \"\";\r\n\r\n\r\n    // if (auth.token) {\r\n    if (id) {\r\n        pageName = `${page}/[id]`\r\n    } else {\r\n        pageName = `${page}`\r\n    }\r\n    // }\r\n\r\n    return generatePage(pageName)\r\n}\r\n\r\nexport default PageRender\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\customRouter\\PrivateRouter.js",["778","779"],"import { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRouter = (props) => {\r\n    const firstLogin = localStorage.getItem('firstLogin')\r\n    // return firstLogin ? <Route {...props} /> : <Redirect to=\"/\" />\r\n    return <Route {...props} />\r\n}\r\n\r\nexport default PrivateRouter\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\register.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\login.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\ActivationEmail.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\admin_profile.js",["780","781","782"],"import FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteUser, updateRole } from '../redux/actions/usersAction';\r\n\r\nconst initialState = {\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    role: '',\r\n    mobile: '',\r\n    avatar: ''\r\n}\r\nconst limit = 10\r\nfunction Profile() {\r\n    const { auth, users } = useSelector(state => state)\r\n    const [data, setData] = useState(initialState)\r\n\r\n    const [dataUser, setDataUser] = useState([])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        selectPage(0)\r\n    }, [dispatch, auth.token])\r\n\r\n    useEffect(() => {\r\n        if (users.users) setDataUser(users.users)\r\n\r\n    }, [users])\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setData({ ...data, [name]: value })\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        dispatch(updateRole(data, auth))\r\n    }\r\n\r\n    const handleView = (user) => {\r\n        setData(user)\r\n    }\r\n\r\n    const handleDelete = (user) => {\r\n        dispatch(deleteUser(user, auth))\r\n    }\r\n    //phan trang\r\n    const initDataShow = users.users ? users.users : [];\r\n    const [dataShow, setDataShow] = useState(initDataShow)\r\n    let pages = 1\r\n    let range = []\r\n\r\n    if (limit !== undefined) {\r\n        let page = Math.floor(initDataShow.length / Number(limit))\r\n        pages = initDataShow.length % Number(limit) === 0 ? page : page + 1\r\n        range = [...Array(pages).keys()]\r\n    }\r\n\r\n    const [currPage, setCurrPage] = useState(0)\r\n\r\n    const selectPage = page => {\r\n        const start = Number(limit) * page\r\n        const end = start + Number(limit)\r\n\r\n        setDataShow(initDataShow.slice(start, end))\r\n\r\n        setCurrPage(page)\r\n    }\r\n    return (\r\n        <div className=\"page-admin\">\r\n            <div className=\"profile_page\">\r\n                <div className=\"col-left\">\r\n                    <h2>User Profile</h2>\r\n\r\n                    <div className=\"avatar\">\r\n                        <img src={data.avatar} alt=\"\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\" className=\"text-label\">Name</label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" value={data.firstname + ' ' + data.lastname}\r\n                            disabled />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\" className=\"text-label\">Email</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" value={data.email}\r\n                            disabled />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"mobile\" className=\"text-label\">PhoneNumber</label>\r\n                        <input type=\"password\" name=\"mobile\" id=\"mobile\"\r\n                            value={data.mobile} disabled />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={data.role}\r\n                                label=\"role\"\r\n                                onChange={e => setData({ ...data, 'role': e.target.value })}\r\n                            >\r\n                                <MenuItem value={'candidate'}>candidate</MenuItem>\r\n                                <MenuItem value={'company'}>company</MenuItem>\r\n                                <MenuItem value={'admin'}>admin</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <em style={{ color: \"crimson\" }}>\r\n                            * If you update your password here, you will not be able\r\n                            to login quickly using google and facebook.\r\n                        </em>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <button onClick={handleUpdate}>Update</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-right\">\r\n                    <h2 className=\"text-center\">List Users</h2>\r\n\r\n                    <div style={{ overflowX: \"auto\" }}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Company</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    dataShow.map((user, index) => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{currPage * 10 + index}</td>\r\n                                            <td>{user.firstname + ' ' + user.lastname}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    user.role === 'company'\r\n                                                        ? <i className=\"fas fa-check\" title=\"company\"></i>\r\n                                                        : <i className=\"fas fa-times\" title=\"user\"></i>\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                {/* <Link to={`/edit_user/${user._id}`}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link> */}\r\n                                                <i className=\"fas fa-edit\" title=\"Edit\"\r\n                                                    onClick={() => handleView(user)}></i>\r\n                                                <i className=\"fas fa-trash-alt\" title=\"Remove\"\r\n                                                    onClick={() => handleDelete(user)} ></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                        {\r\n                            pages > 1 ? (\r\n                                <div className=\"table__pagination\">\r\n                                    {\r\n                                        range.map((item, index) => (\r\n                                            <div key={index} className={`table__pagination-item ${currPage === index ? 'active' : ''}`} onClick={() => selectPage(index)}>\r\n                                                {item + 1}\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\ResetPassword.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\ForgotPassword.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\admin_manage_company.js",["783","784"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteCompany } from '../redux/actions/listCompanyAction';\r\n\r\nconst initialState = {\r\n    companyName: '', address: '', industry: '', info: '', website: '', phoneNumber: '', companySize: '', logo: ''\r\n}\r\nconst limit = 10\r\nfunction Profile() {\r\n    const { auth, users, listCompany } = useSelector(state => state)\r\n    const [data, setData] = useState(initialState)\r\n    const [dataUser, setDataUser] = useState([])\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        selectPage(0)\r\n    }, [dispatch, auth.token, listCompany.companies])\r\n\r\n    useEffect(() => {\r\n        if (users.users) setDataUser(users.users)\r\n        // if (listCompany.companies) {\r\n        //     setCompanies(listCompany.companies)\r\n        //     console.log(companies)\r\n        // }\r\n\r\n    }, [users, listCompany])\r\n\r\n    // const handleChange = e => {\r\n    //     const { name, value } = e.target\r\n    //     setData({ ...data, [name]: value })\r\n    // }\r\n\r\n    // const handleUpdate = () => {\r\n    //     dispatch(updateRole(data, auth))\r\n    // }\r\n\r\n    const handleView = (company) => {\r\n        setData(company)\r\n    }\r\n\r\n    const handleDelete = (company) => {\r\n        dispatch(deleteCompany(company, auth))\r\n    }\r\n\r\n    //phan trang\r\n    const initDataShow = listCompany.companies ? listCompany.companies : [];\r\n    const [dataShow, setDataShow] = useState(initDataShow)\r\n    let pages = 1\r\n    let range = []\r\n\r\n    if (limit !== undefined) {\r\n        let page = Math.floor(initDataShow.length / Number(limit))\r\n        pages = initDataShow.length % Number(limit) === 0 ? page : page + 1\r\n        range = [...Array(pages).keys()]\r\n    }\r\n\r\n    const [currPage, setCurrPage] = useState(0)\r\n\r\n    const selectPage = page => {\r\n        const start = Number(limit) * page\r\n        const end = start + Number(limit)\r\n\r\n        setDataShow(initDataShow.slice(start, end))\r\n\r\n        setCurrPage(page)\r\n    }\r\n    return (\r\n        <div className=\"page-admin\">\r\n            <div className=\"profile_page\">\r\n                <div className=\"col-left\">\r\n                    <h2>Company Info</h2>\r\n\r\n                    <div className=\"avatar\">\r\n                        <img src={data.logo} alt=\"\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\" className=\"text-label\">Company Name</label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" value={data.companyName}\r\n                            disabled />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\" className=\"text-label\">Email</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" value={data.website}\r\n                            disabled />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\" className=\"text-label\">Company size</label>\r\n                        <input type=\"text\" name=\"role\" id=\"role\"\r\n                            value={data.companySize} disabled />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"cf_password\" className=\"text-label\">Phone Number</label>\r\n                        <input type=\"text\" name=\"cf_password\" id=\"cf_password\"\r\n                            value={data.phoneNumber} disabled />\r\n                    </div>\r\n\r\n                    {/* <div>\r\n                        <em style={{ color: \"crimson\" }}>\r\n                            * If you update your password here, you will not be able\r\n                            to login quickly using google and facebook.\r\n                        </em>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <button onClick={handleUpdate}>Update</button>\r\n                    </div> */}\r\n                </div>\r\n                <div className=\"col-right\">\r\n                    <h2 className=\"text-center\">List Companies</h2>\r\n\r\n                    <div style={{ overflowX: \"auto\" }}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Website</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    dataShow.map((company, index) => (\r\n                                        <tr key={company.idCompany}>\r\n                                            <td>{currPage * 10 + index}</td>\r\n                                            <td>{company.companyName}</td>\r\n                                            <td>{company.website}</td>\r\n\r\n                                            <td>\r\n\r\n                                                <i className=\"fas fa-edit\" title=\"Edit\"\r\n                                                    onClick={() => handleView(company)}></i>\r\n                                                <i className=\"fas fa-trash-alt\" title=\"Remove\"\r\n                                                    onClick={() => handleDelete(company)} ></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                        {\r\n                            pages > 1 ? (\r\n                                <div className=\"table__pagination\">\r\n                                    {\r\n                                        range.map((item, index) => (\r\n                                            <div key={index} className={`table__pagination-item ${currPage === index ? 'active' : ''}`} onClick={() => selectPage(index)}>\r\n                                                {item + 1}\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\analysisjob\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\managejob\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\admin_manage_post.js",["785","786"],"import ReadMoreIcon from '@mui/icons-material/ReadMore';\r\nimport dateFormat from 'dateformat';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteCompany } from '../redux/actions/listCompanyAction';\r\n// import { updateRole } from '../redux/actions/usersAction';\r\n\r\n\r\nconst initialState = {\r\n    // companyName: '', address: '', industry: '', info: '', website: '', phoneNumber: '', companySize: '', logo: ''\r\n    companyName: '', address: '', position: '', industry: '', minSalary: 0, maxSalary: 0, endDate: '', logo: '', createdAt: ''\r\n}\r\nconst limit = 7\r\nfunction Profile() {\r\n    const { auth, listCompany, allJob } = useSelector(state => state)\r\n    const [data, setData] = useState(initialState)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        selectPage(0)\r\n    }, [dispatch, auth.token, allJob])\r\n\r\n    useEffect(() => {\r\n        // if (users.users) setDataUser(users.users)\r\n        // if (listCompany.companies) {\r\n        //     setCompanies(listCompany.companies)\r\n        //     console.log(companies)\r\n        // }\r\n\r\n    }, [allJob])\r\n\r\n    // const handleChange = e => {\r\n    //     const { name, value } = e.target\r\n    //     setData({ ...data, [name]: value })\r\n    // }\r\n\r\n    // const handleUpdate = () => {\r\n    //     dispatch(updateRole(data, auth))\r\n    // }\r\n\r\n    const handleView = (job) => {\r\n        setData(job)\r\n    }\r\n\r\n    const handleDelete = (job) => {\r\n        dispatch(deleteCompany(job, auth))\r\n    }\r\n    //phan trang\r\n    const initDataShow = allJob.jobs ? allJob.jobs : [];\r\n    const [dataShow, setDataShow] = useState(initDataShow)\r\n    let pages = 1\r\n    let range = []\r\n\r\n    if (limit !== undefined) {\r\n        let page = Math.floor(initDataShow.length / Number(limit))\r\n        pages = initDataShow.length % Number(limit) === 0 ? page : page + 1\r\n        range = [...Array(pages).keys()]\r\n    }\r\n\r\n    const [currPage, setCurrPage] = useState(0)\r\n\r\n    const selectPage = page => {\r\n        const start = Number(limit) * page\r\n        const end = start + Number(limit)\r\n\r\n        setDataShow(initDataShow.slice(start, end))\r\n\r\n        setCurrPage(page)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"profile_page\">\r\n                <div className=\"col-left\">\r\n                    <h2> \"Company Info\"</h2>\r\n\r\n                    <div className=\"avatar\">\r\n                        <img src={data.logo} alt=\"\" />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">company Name</label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" value={data.companyName}\r\n                            disabled />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Address</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" value={data.address}\r\n                            disabled />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Position</label>\r\n                        <input type=\"text\" name=\"role\" id=\"role\"\r\n                            placeholder=\"role\" value={data.position} disabled />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"cf_password\">Salary</label>\r\n                        <input type=\"text\" name=\"cf_password\" id=\"cf_password\"\r\n                            value={`${data.minSalary / 1000000}-${data.maxSalary / 1000000}tr`} disabled />\r\n                    </div>\r\n\r\n                    {/* <div>\r\n                        <em style={{ color: \"crimson\" }}>\r\n                            * If you update your password here, you will not be able\r\n                            to login quickly using google and facebook.\r\n                        </em>\r\n                    </div> */}\r\n\r\n                    {/* <button onClick={handleUpdate}>Update</button> */}\r\n                </div>\r\n                <div className=\"col-right\">\r\n                    <h2>{auth.isAdmin ? \"Companies\" : \"My Orders\"}</h2>\r\n\r\n                    <div style={{ overflowX: \"auto\" }}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Company Name</th>\r\n                                    <th>Positon</th>\r\n                                    <th>Create date</th>\r\n                                    <th>End date</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {console.log(dataShow)}\r\n                            <tbody>\r\n                                {\r\n                                    dataShow.map((job, index) => (\r\n                                        <tr key={job.idCompany}>\r\n                                            <td>{currPage * 10 + index}</td>\r\n                                            <td>{job.companyName}</td>\r\n                                            <td>{job.position}</td>\r\n                                            <td>{dateFormat(job.createdAt, 'dd/mm/yyyy')}</td>\r\n                                            <td>{dateFormat(job.endDate, 'dd/mm/yyyy')}</td>\r\n                                            <td>\r\n\r\n                                                <i className=\"fas fa-edit\" title=\"Edit\"\r\n                                                    onClick={() => handleView(job)}></i>\r\n                                                <i className=\"fas fa-trash-alt\" title=\"Remove\"\r\n                                                    onClick={() => handleDelete(job)} ></i>\r\n                                                <ReadMoreIcon />\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                        {\r\n                            pages > 1 ? (\r\n                                <div className=\"table__pagination\">\r\n                                    {\r\n                                        range.map((item, index) => (\r\n                                            <div key={index} className={`table__pagination-item ${currPage === index ? 'active' : ''}`} onClick={() => selectPage(index)}>\r\n                                                {item + 1}\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\homeJobAction.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\listJobAction.js",["787"],"import { getDataAPI, getDataJob, postDataAPI } from '../../utils/fetchData'\r\nimport { imageUpload } from '../../utils/imageUpload'\r\nimport { GLOBALTYPES } from './globalTypes'\r\nimport { createNotify } from './notifyAction'\r\n\r\n\r\nexport const getAllJob = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n        const resAllJob = await getDataJob('get_all_job', null)\r\n        dispatch({\r\n\r\n            type: GLOBALTYPES.ALLJOB,\r\n            payload: {\r\n                jobs: resAllJob.data\r\n            }\r\n        })\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: false } })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const searchJob = (search, address) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n        const resSearchJob = await getDataAPI(`/search_job?position=${search}`, null)\r\n        console.log(resSearchJob)\r\n\r\n\r\n        dispatch({\r\n            type: GLOBALTYPES.ALLJOB,\r\n            payload: {\r\n                searchJob: address === 'All locations' ? resSearchJob.data : resSearchJob.data.filter((key) => key.address === address)\r\n\r\n            }\r\n        })\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: false } })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const createJob = (jobData, level, jobType, arrSkill, companySize, logo, image, auth, socket) => async (dispatch) => {\r\n    try {\r\n        let mediaLogo;\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n        console.log(arrSkill)\r\n        let now = new Date()\r\n        let endDate = new Date(jobData.endDate)\r\n        if (jobData.minSalary > jobData.maxSalary) {\r\n            dispatch({ type: GLOBALTYPES.ALERT, payload: { error: 'Salary wrong' } })\r\n        }\r\n        else\r\n            if (now.getTime() > endDate.getTime()) {\r\n                dispatch({ type: GLOBALTYPES.ALERT, payload: { error: 'End date wrong' } })\r\n            }\r\n            else {\r\n                // if (logo) mediaLogo = await imageUpload([logo])\r\n                // if (image) mediaImage = await imageUpload([image])\r\n\r\n\r\n                const res = await postDataAPI(\"create_job\", {\r\n                    ...jobData, level, jobType, companySize, skill: arrSkill,\r\n                    // logo: logo ? mediaLogo[0].url : '', image: image ? mediaImage[0].url : ''\r\n                    logo: auth.user.avatar,\r\n                }, auth.token)\r\n\r\n\r\n\r\n                dispatch(getAllJob())\r\n                dispatch({ type: GLOBALTYPES.ALERT, payload: { success: res.data.msg } })\r\n                if (res.data.newJob) {\r\n\r\n\r\n                    socket.emit('createJob', auth.user)\r\n\r\n\r\n                    // Notify\r\n                    const msg = {\r\n                        id: res.data.newJob._id,\r\n                        text: 'added a new post.',\r\n                        recipients: res.data.newJob.user.followersCompany,\r\n                        url: `/jobdetail/${res.data.newJob._id}`,\r\n                        image: logo ? mediaLogo[0].url : ''\r\n                    }\r\n\r\n                    dispatch(createNotify({ msg, auth, socket }))\r\n                }\r\n            }\r\n\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: { error: err.response.data.msg }\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateJob = (id, jobData, level, jobType, companySize, skill, logo, image, auth, socket) => async (dispatch) => {\r\n    try {\r\n        console.log(jobData)\r\n        let mediaLogo, mediaImage;\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n\r\n        if (logo) mediaLogo = await imageUpload([logo])\r\n        if (image) mediaImage = await imageUpload([image])\r\n\r\n        console.log(jobData)\r\n        const res = await postDataAPI(\"update_job\", {\r\n            ...jobData, level, jobType, companySize, skill, id,\r\n            logo: logo ? mediaLogo[0].url : jobData.logo, image: image ? mediaImage[0].url : jobData.image\r\n        }, auth.token)\r\n\r\n        console.log(res.data)\r\n        dispatch(getAllJob())\r\n        // Notify\r\n        const msg = {\r\n            id: res.data.newJob._id,\r\n            text: 'updated a post.',\r\n            recipients: res.data.newJob.user.followersCompany,\r\n            url: `/jobdetail/${res.data.newJob._id}`,\r\n            image: logo ? mediaLogo[0].url : ''\r\n        }\r\n        dispatch(createNotify({ msg, auth, socket }))\r\n\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { success: res.data.msg } })\r\n    } catch (err) {\r\n        console.log(err)\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: { error: err.response.data.msg }\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteJob = ({ id, auth }) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n        const resAllJob = await postDataAPI('delete_job', { id }, auth.token)\r\n        // dispatch({\r\n\r\n        //     type: GLOBALTYPES.ALLJOB,\r\n        //     payload: {\r\n        //         jobs: resAllJob.data\r\n        //     }\r\n        // })\r\n        // dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: false } })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg\r\n            }\r\n        })\r\n    }\r\n}","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\usersAction.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\listCompanyAction.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\resumeAction.js",["788"],"import dateFormat from 'dateformat'\r\nimport { getDataAPI, patchDataAPI, postDataAPI } from '../../utils/fetchData'\r\nimport { imageUpload } from '../../utils/imageUpload'\r\nimport { GLOBALTYPES } from './globalTypes'\r\nimport { createNotify } from './notifyAction'\r\nimport { getListSubmited } from './sumitedAction'\r\n\r\nexport const getResume = (dataResume, arrEdu, arrExp, arrSkill, language, avatar) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n        let media\r\n        if (avatar) media = await imageUpload([avatar])\r\n        dispatch({\r\n            type: GLOBALTYPES.DATARESUME,\r\n            payload: {\r\n                resumes: { ...dataResume, educations: [...arrEdu], experiences: [...arrExp], skill: [...arrSkill], language: [...language] },\r\n                avatar: avatar ? media[0].url : '',\r\n                // skill: skill,\r\n                // language: language\r\n            }\r\n        })\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                success: 'Preview success'\r\n            }\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: 'Preview failure'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const saveResume = (cvData, arrEdu, arrExp, arrSkill, language, avatar, auth) => async (dispatch) => {\r\n    try {\r\n        let media;\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n\r\n        if (avatar) media = await imageUpload([avatar])\r\n\r\n        const res = await postDataAPI(\"create_cv\", {\r\n            ...cvData, educations: [...arrEdu], experiences: [...arrExp],\r\n            skill: arrSkill,\r\n            language,\r\n            avatar: avatar ? media[0].url : ''\r\n        }, auth.token)\r\n\r\n\r\n\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { success: res.data.msg } })\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: { error: err.response.data.msg }\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAllResume = (auth) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n\r\n        const res = await getDataAPI('get_all_cv', auth.token)\r\n\r\n\r\n        dispatch({\r\n            type: GLOBALTYPES.ALLRESUME,\r\n            payload: {\r\n                resumes: res.data\r\n            }\r\n        })\r\n\r\n\r\n\r\n\r\n        // dispatch({ type: GLOBALTYPES.ALERT, payload: { success: res.data.msg } })\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: false } })\r\n\r\n    } catch (err) {\r\n        console.log(err.response.data.msg)\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: { error: err.response.data.msg }\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateResume = (id, cvData, skill, language, avatar, auth) => async (dispatch) => {\r\n    try {\r\n        let media;\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n\r\n        if (avatar) media = await imageUpload([avatar])\r\n\r\n        console.log(cvData)\r\n\r\n        const res = await patchDataAPI(\"update_cv\", {\r\n            id,\r\n            ...cvData,\r\n            skill,\r\n            language,\r\n            avatar: avatar ? media[0].url : cvData[0].avatar\r\n        }, auth.token)\r\n\r\n\r\n\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { success: res.data.msg } })\r\n    } catch (err) {\r\n        console.log(err)\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: { error: err.response.data.msg }\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteResume = (id, auth) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n\r\n\r\n        const res = await patchDataAPI(\"delete_cv\", {\r\n            id\r\n        }, auth.token)\r\n\r\n        dispatch(getAllResume(auth))\r\n\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { success: res.data.msg } })\r\n    } catch (err) {\r\n        console.log(err)\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: { error: err.response.data.msg }\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteData = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n\r\n\r\n        dispatch({\r\n            type: GLOBALTYPES.ALLRESUME,\r\n            payload: {}\r\n        })\r\n\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {} })\r\n    } catch (err) {\r\n        console.log(err)\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: { error: err.response.data.msg }\r\n        })\r\n    }\r\n}\r\n\r\nexport const submitCV = (idJob, idCompany, cv, auth, socket) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } })\r\n        const date = new Date()\r\n\r\n        const res = await postDataAPI('submit-cv', { idJob, idCompany, idCV: cv._id, dataCV: cv, dateSubmit: dateFormat(date, 'yyyy/mm/dd') }, auth.token)\r\n        if (res.data.newSubmit) {\r\n            const msg = {\r\n                id: res.data.newSubmit.idCV,\r\n                text: 'submited resume.',\r\n                recipients: res.data.newSubmit.idCompany,\r\n                url: `/reviewResume/${res.data.newSubmit._id}`,\r\n                // image: logo ? mediaLogo[0].url : ''\r\n            }\r\n            dispatch(createNotify({ msg, auth, socket }))\r\n\r\n        }\r\n        dispatch({ type: GLOBALTYPES.ALERT, payload: { success: res.data.msg } })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: { error: err.response.data.msg }\r\n        })\r\n    }\r\n}\r\n\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\globalTypes.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\sumitedAction.js",["789"],"import { getDataAPI, postDataAPI } from '../../utils/fetchData'\r\nimport { GLOBALTYPES } from './globalTypes'\r\nimport { createNotify } from './notifyAction'\r\n\r\n\r\nexport const getListSubmited = (auth) => async (dispatch) => {\r\n    try {\r\n        const res = await getDataAPI('get_submited', auth.token)\r\n        dispatch({\r\n            type: GLOBALTYPES.SUBMITEDRESUME,\r\n            payload: {\r\n                submited: res.data\r\n            }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const getListSubmitedForCompany = (id, auth) => async (dispatch) => {\r\n    try {\r\n        const res = await getDataAPI('get_submited_for_company', auth.token)\r\n        let data = {}\r\n        res.data.map(element => {\r\n            if (element.idJob === id) {\r\n                data = { ...element }\r\n            }\r\n        })\r\n\r\n        dispatch({\r\n            type: GLOBALTYPES.SUBMITEDRESUME,\r\n            payload: {\r\n                submited: data\r\n            }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const unSubmit = (idJob, auth) => async (dispatch) => {\r\n    try {\r\n        const res = await postDataAPI('unsubmit_cv', { idJob }, auth.token)\r\n\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                success: res.data.msg\r\n            }\r\n        })\r\n        dispatch(getListSubmited(auth))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const setStatus = (idJob, idCV, idCandidate, status, auth, socket) => async (dispatch) => {\r\n    try {\r\n        const res = await postDataAPI('set_status', { idJob, idCV, status, idCandidate }, auth.token)\r\n\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                success: res.data.msg\r\n            }\r\n        })\r\n        dispatch(getListSubmitedForCompany(idJob, auth))\r\n        // Notify\r\n        const msg = {\r\n            id: res.data.idJob,\r\n            text: 'Your resume has been ' + res.data.status,\r\n            recipients: [res.data.idCandidate],\r\n            url: `/jobdetail/${res.data.idJob}`,\r\n            // image: logo ? mediaLogo[0].url : ''\r\n        }\r\n\r\n        dispatch(createNotify({ msg, auth, socket }))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GLOBALTYPES.ALERT,\r\n            payload: {\r\n                error: err.response.data.msg\r\n            }\r\n        })\r\n    }\r\n}","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\postAction.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\authAction.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\suggestionsAction.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\StatusModal.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\notifyAction.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\header\\Header.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\alert\\Alert.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\footer\\Footer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\updatejob\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\message\\CallModal.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\index.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\newJob\\NewJob.jsx",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\dashboard\\Dashboard.jsx",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\userList\\UserList.jsx",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\header\\MessageAuth.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\companys\\index.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\jobs\\index.js",["790"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport JobsComponent from '../../components/jobs/JobsComponent';\r\nimport SearchJob from '../../components/jobs/SearchJob';\r\nimport './job.scss';\r\n\r\nconst limit = 5\r\n\r\nconst Job = () => {\r\n    const { allJob, auth } = useSelector(state => state)\r\n    const initDataShow = allJob.jobs ? allJob.jobs : allJob.searchJob ? allJob.searchJob : [];\r\n    const [dataShow, setDataShow] = useState(initDataShow)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        // dispatch(refreshToken())\r\n        // dispatch(getAllJob())\r\n        selectPage(0)\r\n    }, [dispatch, auth.token, allJob.searchJob, allJob.jobs])\r\n\r\n    let pages = 1\r\n    let range = []\r\n\r\n    if (limit !== undefined) {\r\n        let page = Math.floor(initDataShow.length / Number(limit))\r\n        pages = initDataShow.length % Number(limit) === 0 ? page : page + 1\r\n        range = [...Array(pages).keys()]\r\n    }\r\n\r\n    const [currPage, setCurrPage] = useState(0)\r\n\r\n    const selectPage = page => {\r\n        const start = Number(limit) * page\r\n        const end = start + Number(limit)\r\n\r\n        setDataShow(initDataShow.slice(start, end))\r\n\r\n        setCurrPage(page)\r\n    }\r\n\r\n    return (\r\n        <div className=\"job-view mb-5\" onLoad={window.scrollTo(0, 0)}>\r\n            <SearchJob />\r\n            <div className=\"container\">\r\n                <div className=\"mt-3 text-1\">\r\n                    <Link to='/'>Home</Link><span> / Jobs</span>\r\n                </div>\r\n                <div className=\"job-content mt-3 card\">\r\n                    <div className=\"card-body\">\r\n                        <h3>Found <span>{initDataShow.length}</span> matching jobs</h3>\r\n                        <div className=\"row\">\r\n                            <div className=\"job-list card-body\">\r\n                                {\r\n                                    dataShow.map((item, index) => (\r\n                                        <>\r\n                                            <div className=\"job-list-li row\" key={index}>\r\n                                                <JobsComponent\r\n                                                    position={item.position}\r\n                                                    companyName={item.companyName}\r\n                                                    address={item.address}\r\n                                                    minSalary={item.minSalary}\r\n                                                    maxSalary={item.maxSalary}\r\n                                                    idJob={item._id}\r\n                                                    idCompany={item.idCompany}\r\n                                                    endDate={item.endDate}\r\n                                                    logo={item.logo}\r\n                                                />\r\n                                            </div>\r\n                                            <hr />\r\n                                        </>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            pages > 1 ? (\r\n                                <div className=\"table__pagination\">\r\n                                    {\r\n                                        range.map((item, index) => (\r\n                                            <div key={index} className={`table__pagination-item ${currPage === index ? 'active' : ''}`} onClick={() => selectPage(index)}>\r\n                                                {item + 1}\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Job;","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\createCV\\index.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\becomeCompany\\index.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\nhatuyendung\\index.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\messageAction.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\NotFound.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\alert\\Loading.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\alert\\Toast.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\header\\MenuRight.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\header\\MenuLeft.js",["791"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nconst MenuLeft = () => {\r\n\r\n    const navLinks = [\r\n        { label: 'Jobs', title: 'Jobs', path: '/jobs' },\r\n        { label: 'Companies', title: 'Companies', path: '/companys' },\r\n    ]\r\n\r\n    const { auth } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    const { pathname } = useLocation()\r\n\r\n    const isActive = (pn) => {\r\n        if (pn === pathname) return 'active'\r\n    }\r\n\r\n    return (\r\n        <div className=\"menu left\">\r\n            <ul className=\"navbar-nav flex-row\">\r\n                {\r\n\r\n                    navLinks.map((link, index) => (\r\n                        <li className={`nav-item px-2 ${isActive(link.path)}`} key={index}>\r\n                            <Link className=\"nav-link\" to={link.path}>\r\n                                <span className=\"\">{link.title}</span>\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n                {!auth.isCompany && !auth.isAdmin &&\r\n                    <li className={`nav-item px-2 ${isActive('/createCV')}`} >\r\n                        <Link className=\"nav-link\" to='/createCV'>\r\n                            <span className=\"\">Create CV</span>\r\n                        </Link>\r\n                    </li>\r\n                }\r\n\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MenuLeft\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\Icons.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\Avatar.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\submitedReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\viewcv\\index.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\topCompanyReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\usersReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\dataResumeReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\resumeReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\updateJob\\UpdateJobs.js",["792","793","794"],"import Autocomplete from '@mui/material/Autocomplete'\r\nimport TextField from '@mui/material/TextField'\r\nimport dateFormat from 'dateformat'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\nimport '../../pages/manage/manage.scss'\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\nimport { updateJob } from '../../redux/actions/listJobAction'\r\nimport { checkImage } from '../../utils/imageUpload'\r\nimport Sidebar from '../sidebar/Sidebar'\r\n\r\n\r\nconst UpdateJobs = () => {\r\n    const dataLevel = [\r\n        \"Interns\",\r\n        \"Fresher\",\r\n        \"Experienced\",\r\n    ]\r\n    const dataTypeJob = [\r\n        \"Full-time\",\r\n        \"Past-time\",\r\n        \"Internship\",\r\n        \"Freelancer\",\r\n        \"Seasonal\",\r\n        \"Other\"\r\n    ]\r\n    const dataSize = [\r\n        \"10-\",\r\n        \"10-24\",\r\n        \"25-99\",\r\n        \"100-499\",\r\n        \"500-999\",\r\n        \"1000-4999\"\r\n    ]\r\n    const topSkill = [\r\n        { title: 'JavaScript' },\r\n        { title: 'Problem-Solving Skills' },\r\n        { title: 'Planning and Organizational Skills' },\r\n        { title: 'Data Analysis' },\r\n        { title: 'Adaptability' },\r\n        { title: \"Other\" }\r\n    ];\r\n    const { allJob, auth, theme, socket } = useSelector(state => state)\r\n    const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n    const [level, setLevel] = useState('')\r\n    const [jobType, setJobType] = useState('')\r\n    const [companySize, setSize] = useState('10-')\r\n    const [skill, setSkill] = useState([])\r\n    const [endDate, setEndDate] = useState('')\r\n\r\n    const initState = {\r\n        companyName: '', position: '', level, industry: '', address: '', description: '', requirement: '', companySize: '', infoCompany: '', benefit: ''\r\n    }\r\n    const [jobData, setJobData] = useState(initState)\r\n    // const { idCompany, companyName, position, industry, address, description, requirement, minSalary, maxSalary, infoCompany, benefit } = jobData\r\n\r\n    const [logo, setLogo] = useState('')\r\n    const [image, setImage] = useState('')\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target\r\n        setJobData({ ...jobData, [name]: value })\r\n    }\r\n\r\n    const changeLogo = (e) => {\r\n        const file = e.target.files[0]\r\n        const err = checkImage(file)\r\n        if (err) return dispatch({\r\n            type: GLOBALTYPES.ALERT, payload: { error: err }\r\n        })\r\n        setLogo(file)\r\n    }\r\n    const changeImage = (e) => {\r\n        const file = e.target.files[0]\r\n\r\n        const err = checkImage(file)\r\n        if (err) return dispatch({\r\n            type: GLOBALTYPES.ALERT, payload: { error: err }\r\n        })\r\n\r\n        setImage(file)\r\n    }\r\n    const onTagsChangeSkill = (event, values) => {\r\n        setSkill(values)\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        dispatch(updateJob(id, jobData, level, jobType, companySize, skill, logo, image, auth, socket))\r\n    }\r\n\r\n    useEffect(() => {\r\n        let data = {}\r\n        if (allJob.jobs) {\r\n            allJob.jobs.map(element => {\r\n                if (element._id === id) {\r\n                    data = { ...element }\r\n                    setLevel(element.level)\r\n                    setJobType(element.jobType)\r\n                    setSkill([...element.skill])\r\n                    setEndDate(dateFormat(element.endDate, 'yyyy-mm-dd'))\r\n                }\r\n            })\r\n        }\r\n        setJobData(data)\r\n    }, [allJob.jobs])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"manage_container\">\r\n                <Sidebar />\r\n                <div className=\"create-job\">\r\n                    <div className=\"create-job-header\">\r\n                        <h2 className=\"text-center text-2\">Edit Post</h2>\r\n                    </div>\r\n                    {console.log('skill', skill, 'topskill', topSkill)}\r\n                    <div className=\"container-create-job\">\r\n                        <div className=\"profile-account card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"text-center mb-4\">Job</h4>\r\n                                <form>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Job Title</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <input type=\"\" className=\"form-control\" id=\"position\" name='position' defaultValue={jobData.position} onChange={handleInput} placeholder=\"Eg. Senior UX Designer\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Job Level</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <select className=\"form-control\" id=\"\" placeholder=\"\" name='level' defaultValue={level} onChange={e => setLevel(e.target.value)}>\r\n                                                {\r\n                                                    dataLevel.map((element) => (\r\n                                                        <option value={element}>{element}</option>\r\n                                                    ))\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Job Type</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <select className=\"form-control\" id=\"\" placeholder=\"\" defaultValue={jobType} name='jobType' onChange={e => setJobType(e.target.value)}>\r\n                                                {\r\n                                                    dataTypeJob.map((element) => (\r\n                                                        <option value={element}>{element}</option>\r\n                                                    ))\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\" >Job Category</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <input type=\"\" className=\"form-control\" id=\"\" placeholder=\"Nhập ngành nghề\" defaultValue={jobData.industry} name='industry' onChange={handleInput} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Working Location</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <input type=\"\" name='address' onChange={handleInput} className=\"form-control\" defaultValue={jobData.address} id=\"\" placeholder=\"123 Đà Nẵng\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Description</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <textarea className=\"form-control\" name='description' onChange={handleInput} defaultValue={jobData.description} placeholder=\"Nhập mô tả công việc\"></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Requirements</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <textarea className=\"form-control\" name='requirement' onChange={handleInput} defaultValue={jobData.requirement} placeholder=\"Nhập yêu cầu công việc\"></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Skill Tags</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            {/* <input type=\"\" name='skill' onChange={handleInput} defaultValue={jobData.skill} className=\"form-control\" id=\"\" placeholder=\"Ví dụ: JavaScript, C++, ....\" /> */}\r\n                                            <Autocomplete\r\n                                                multiple\r\n                                                limitTags={2}\r\n                                                id=\"multiple-limit-tags\"\r\n                                                options={topSkill}\r\n                                                onChange={onTagsChangeSkill}\r\n                                                defaultValue={skill}\r\n                                                getOptionLabel={(option) => option.title}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField {...params} label=\"limitTags\" placeholder=\"Skill\" />\r\n                                                )}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Salary Range</label>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <input type=\"\" name='minSalary' onChange={handleInput} defaultValue={jobData.minSalary} className=\"form-control\" id=\"\" placeholder=\"Ví dụ: 2000000\" />\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <input type=\"\" name='maxSalary' onChange={handleInput} defaultValue={jobData.maxSalary} className=\"form-control\" id=\"\" placeholder=\"Ví dụ: 5000000\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Date-end</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <input type=\"date\" value={endDate} className=\"form-control\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <hr />\r\n                                <h4 className=\"text-center mb-4\">Your Company</h4>\r\n                                <form>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Company Name</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <input type=\"\" name='companyName' onChange={handleInput} defaultValue={jobData.companyName} className=\"form-control\" id=\"\" placeholder=\"Ví dụ: RankWorks\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Company Size</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <select className=\"form-control\" id=\"\" name='companySize' defaultValue={jobData.companySize} onChange={(e) => setSize(e.target.value)} placeholder=\"\">\r\n                                                {\r\n                                                    dataSize.map((element) => (\r\n                                                        <option value={element}>{element}</option>\r\n                                                    ))\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Địa Chỉ Công Ty</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <input type=\"\" className=\"form-control\" id=\"\" placeholder=\"Ví dụ: 123 Đà Nẵng\" />\r\n                                </div>\r\n                            </div> */}\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Company Profile</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <textarea className=\"form-control\" name='infoCompany' defaultValue={jobData.infoCompany} onChange={handleInput} placeholder=\"Thông tin công ty...\"></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Benefits</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <input type=\"\" className=\"form-control\" name='benefit' defaultValue={jobData.benefit} onChange={handleInput} id=\"\" placeholder=\"Ví dụ: Lương tháng 13\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Company Logo</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <input type=\"file\" class=\"form-control\" accept=\"image/*\" onChange={changeLogo} aria-label=\"Upload\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mb-3\">\r\n                                        <label for=\"\" className=\"col-sm-3 col-form-label\">Company Photos</label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <input type=\"file\" onChange={changeImage} accept=\"image/*\" class=\"form-control\" aria-describedby=\"inputGroupFileAddon04\" aria-label=\"Upload\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <div className=\"text-center\">\r\n                                    <button type=\"submit\" onClick={handleUpdate} class=\"btn btn-primary btn-save\">Update</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateJobs\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\header\\MenuRightAuth.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\utils\\mediaShow.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\utils\\fetchData.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\utils\\valid.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\utils\\imageUpload.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\utils\\validation_reset.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\homePage\\Banner\\Banner.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\homePage\\Evaluate\\Evaluate.js",["795"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Evaluate.scss';\r\n\r\nconst Evaluate = () => {\r\n    return (\r\n        <div className=\"evaluate mt-5 mb-5\">\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Candidates Say About RankWork</h2>\r\n                <h2 className=\"text-center text-2\"></h2>\r\n                <div id=\"carouselEvaluate\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                    <div className=\"carousel-inner\">\r\n                        <div className=\"carousel-item active row no-gutters\">\r\n                            <div className=\"row evaluate-card\">\r\n                                <div className=\"col-sm-4\">\r\n                                    <div className=\"card border-info mb-3\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Lê Hữu Hoàng Long</h5>\r\n                                            <p className=\"card-text text-secondary\">Tôi có ấn tượng mạnh với CV ứng viên được gửi từ RankWork. CV trình bày rất rõ ràng, bắt mắt, giúp tôi thấy ngay được điểm mạnh của từng ứng viên. Nhờ đó mà công tác Tuyển dụng cũng thuận lợi hơn.</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-4\">\r\n                                    <div className=\"card border-info mb-3\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Đặng Minh Hiếu</h5>\r\n                                            <p className=\"card-text text-secondary\">RankWork là một ý tưởng rất sáng tạo và thực tế. Tôi đã chỉnh sửa CV của mình tốt lên hơn rất nhiều từ những mẫu tham khảo trên trang web.</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-4\">\r\n                                    <div className=\"card border-info mb-3\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Trần Văn Lực</h5>\r\n                                            <p className=\"card-text text-secondary\">Tôi có kinh nghiệm 10 năm trong việc quản lý, tuy nhiên đến giờ CV nhìn vẫn không chuyên nghiệp. RankWork đã giúp tôi có CV chuẩn và chuyên nghiệp hơn rất nhiều.</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"carousel-item row no-gutters\">\r\n                            <div className=\"row evaluate-card\">\r\n                                <div className=\"col-sm-4\">\r\n                                    <div className=\"card border-info mb-3\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Võ Thị Ngọc Ánh</h5>\r\n                                            <p className=\"card-text text-secondary\">Tôi có ấn tượng mạnh với CV ứng viên được gửi từ RankWork. CV trình bày rất rõ ràng, bắt mắt, giúp tôi thấy ngay được điểm mạnh của từng ứng viên. Nhờ đó mà công tác Tuyển dụng cũng thuận lợi hơn.</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-4\">\r\n                                    <div className=\"card border-info mb-3\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Mrs. Thúy Trinh</h5>\r\n                                            <p className=\"card-text text-secondary\">RankWork là một ý tưởng rất sáng tạo và thực tế. Tôi đã chỉnh sửa CV của mình tốt lên hơn rất nhiều từ những mẫu tham khảo trên trang web.</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-4\">\r\n                                    <div className=\"card border-info mb-3\">\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Mr. Ngọc Châu</h5>\r\n                                            <p className=\"card-text text-secondary\">Tôi có kinh nghiệm 10 năm trong việc quản lý, tuy nhiên đến giờ CV nhìn vẫn không chuyên nghiệp. RankWork đã giúp tôi có CV chuẩn và chuyên nghiệp hơn rất nhiều.</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <a className=\"carousel-control-prev\" href=\"#carouselEvaluate\" role=\"button\" data-slide=\"prev\">\r\n                        <span className=\"carousel-control-prev-icon bg-dark\" aria-hidden=\"true\"></span>\r\n                        <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                    <a className=\"carousel-control-next\" href=\"#carouselEvaluate\" role=\"button\" data-slide=\"next\">\r\n                        <span className=\"carousel-control-next-icon bg-dark\" aria-hidden=\"true\"></span>\r\n                        <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                </div>\r\n                <div className=\"row text-center mt-5 evaluate-data\">\r\n                    <div className=\"col-sm-4\">\r\n                        <h1 className=\"card-title\">2,500,000+</h1>\r\n                        <p className=\"card-text text-secondary\">Professional CV updated</p>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <h1 className=\"card-title\">60,000+</h1>\r\n                        <p className=\"card-text text-secondary\">Employers often find candidates on RankWork</p>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <h1 className=\"card-title\">2,000,000+</h1>\r\n                        <p className=\"card-text text-secondary\">Candidate found suitable job</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row text-center mt-5 evaluate-data\">\r\n                    <div className=\"col-sm-12\">\r\n                        <p className=\"card-text text-secondary\">So why not start your dream job with RankWork?</p>\r\n                        <Link to=\"/register\">\r\n                            <button type=\"button\" className=\"btn btn-primary btn-dang-ky\">Register Now</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Evaluate;","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\homePage\\JobType\\JobType.js",["796","797"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getTypeJob } from '../../../redux/actions/homeJobAction';\r\nimport './JobType.scss';\r\n\r\n\r\nconst JobType = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        try {\r\n            // dispatch(getAllJob())\r\n            dispatch(getTypeJob())\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }, [])\r\n\r\n    const { homeJobReducer } = useSelector(state => state)\r\n\r\n\r\n\r\n    const jobIntership = homeJobReducer.jobInternship ? homeJobReducer.jobInternship : []\r\n    const jobPartTime = homeJobReducer.jobPartTime ? homeJobReducer.jobPartTime : []\r\n    const jobFullTime = homeJobReducer.jobFullTime ? homeJobReducer.jobFullTime : []\r\n\r\n\r\n    return (\r\n        <div className=\"job-best mt-5\">\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">The Best Jobs</h2>\r\n                <h2 className=\"text-center text-2\"></h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4 mt-3\">\r\n                        <div className=\"job-box card\">\r\n                            <div className=\"text-title text-uppercase card-header\">\r\n                                <i className=\"far fa-clock\"></i>Intership\r\n                            </div>\r\n                            <div className=\"list-job card-body\">\r\n                                {\r\n                                    jobIntership.map((job) => (\r\n                                        <>\r\n                                            <div className=\"job-over-item row\">\r\n                                                <div className=\"col-3\">\r\n                                                    <img src={job.logo} alt='' />\r\n                                                </div>\r\n                                                <div className=\"col-9\">\r\n                                                    <div className=\"name-job\">\r\n                                                        <Link to={`/jobdetail/${job._id}`}>\r\n                                                            <span title={job.position}>{job.position}</span>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div className=\"name-company\">\r\n                                                        <Link to={`/companydetail/${job.idCompany}`}>\r\n                                                            <span title={job.companyName}>{job.companyName}</span>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div className=\"row job-info\">\r\n                                                        <div className=\"salary col-6\">\r\n                                                            <i className=\"fas fa-dollar-sign\"></i>\r\n                                                            <span>{job.minSalary / 1000000}-{job.maxSalary / 1000000} triệu</span>\r\n                                                        </div>\r\n                                                        <div title={job.address} className=\"location col-6\">\r\n                                                            <i className=\"fas fa-map-marker-alt\"></i>{job.address}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                        </>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-4 mt-3\">\r\n                        <div className=\"job-box card\">\r\n                            <div className=\"text-title text-uppercase card-header\">\r\n                                <i className=\"fas fa-stopwatch\"></i>Part-time\r\n                            </div>\r\n                            <div className=\"list-job card-body\">\r\n                                {\r\n                                    jobPartTime.map((job) => (\r\n                                        <>\r\n                                            <div className=\"job-over-item row\">\r\n                                                <div className=\"col-3\">\r\n                                                    <img src={job.logo} alt='' />\r\n                                                </div>\r\n                                                <div className=\"col-9\">\r\n                                                    <div className=\"name-job\">\r\n                                                        <Link to={`/jobdetail/${job._id}`}>\r\n                                                            <span title={job.position}>{job.position}</span>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div className=\"name-company\">\r\n                                                        <Link to={`/companydetail/${job.idCompany}`}>\r\n                                                            <span title={job.companyName}>{job.companyName}</span>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div className=\"row job-info\">\r\n                                                        <div className=\"salary col-6\">\r\n                                                            <i className=\"fas fa-dollar-sign\"></i>\r\n                                                            <span>{job.minSalary / 1000000}-{job.maxSalary / 1000000} triệu</span>\r\n                                                        </div>\r\n                                                        <div className=\"location col-6\">\r\n                                                            <i className=\"fas fa-map-marker-alt\"></i>\r\n                                                            <span title={job.address}>{job.address}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                        </>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-4 mt-3\">\r\n                        <div className=\"job-box card\">\r\n                            <div className=\"text-title text-uppercase card-header\">\r\n                                <i className=\"fas fa-stopwatch\"></i>Full-time\r\n                            </div>\r\n                            <div className=\"list-job card-body\">\r\n                                {\r\n                                    jobFullTime.map((job) => (\r\n                                        <>\r\n                                            <div className=\"job-over-item row\">\r\n                                                <div className=\"col-3\">\r\n                                                    <img src={job.logo} alt='' />\r\n                                                </div>\r\n                                                <div className=\"col-9\">\r\n                                                    <div className=\"name-job\">\r\n                                                        <Link to={`/jobdetail/${job._id}`}>\r\n                                                            <span title={job.position}>{job.position}</span>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div className=\"name-company\">\r\n                                                        <Link to={`/companydetail/${job.idCompany}`}>\r\n                                                            <span title={job.companyName}>{job.companyName}</span>\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div className=\"row job-info\">\r\n                                                        <div className=\"salary col-6\">\r\n                                                            <i className=\"fas fa-dollar-sign\"></i>\r\n                                                            <span>{job.minSalary / 1000000}-{job.maxSalary / 1000000} triệu</span>\r\n                                                        </div>\r\n                                                        <div className=\"location col-6\">\r\n                                                            <i className=\"fas fa-map-marker-alt\"></i>\r\n                                                            <span title={job.address}>{job.address}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                        </>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobType;","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\homePage\\TopCompany\\TopCompany.js",["798","799"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport './TopCompany.scss';\r\n\r\nconst TopCompany = () => {\r\n\r\n    const { topCompany } = useSelector(state => state)\r\n    const [top, setTop] = useState(topCompany.topcompany ? topCompany.topcompany : [])\r\n\r\n    useEffect(() => {\r\n        if (topCompany.topcompany)\r\n            setTop([...topCompany.topcompany])\r\n    }, [topCompany.topcompany])\r\n\r\n    return (\r\n        <div className=\"company-best mt-5\">\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Top Companies</h2>\r\n                <h2 className=\"text-center text-2\"></h2>\r\n                <div className=\"row mt-3\">\r\n                    {\r\n                        top.map(element => (\r\n                            <div className=\"col-sm-3 col-6 company-block\">\r\n                                <Link to={`/companydetail/${element._id.idCompany}`}>\r\n                                    <div className=\"company-box card\">\r\n                                        <img src={element._id.logo} />\r\n                                        <div className=\"company-box-content\">\r\n                                            <div className=\"company-name text-uppercase\">{element._id.companyName}</div>\r\n                                            <span className=\"company-tag text-uppercase\">New Job</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>               \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopCompany;","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\homePage\\JobIndustry\\JobIndustry.js",["800"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logojob from '../../../images/logo-job.png';\r\nimport logobanhang from '../../../images/logojobindustry/logobanhang.png';\r\nimport logodientu from '../../../images/logojobindustry/logodientu.png';\r\nimport logoitmang from '../../../images/logojobindustry/logoit-mang.png';\r\nimport logoketoan from '../../../images/logojobindustry/logoketoan.png';\r\nimport logomarketing from '../../../images/logojobindustry/logomarketing.png';\r\nimport logonganhang from '../../../images/logojobindustry/logonganhang.png';\r\nimport logonhansu from '../../../images/logojobindustry/logonhansu.png';\r\nimport logonoithat from '../../../images/logojobindustry/logonoithat.png';\r\nimport logoquangcao from '../../../images/logojobindustry/logoquangcao.png';\r\nimport logotaichinh from '../../../images/logojobindustry/logotaichinh.png';\r\nimport logoxaydung from '../../../images/logojobindustry/logoxaydung.png';\r\nimport './JobIndustry.scss';\r\n\r\n\r\nconst JobIndustry = () => {\r\n\r\n    return (\r\n        <div className=\"job-important mt-5\">\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Job Industries</h2>\r\n                <h2 className=\"text-center text-2\"></h2>\r\n                <div className=\"slide-carousel mt-5\">\r\n                    <div id=\"carouselJobIndustry\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                        <div className=\"carousel-inner\">\r\n                            <div className=\"carousel-item active row no-gutters\">\r\n                                <div className=\"row industry-card\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <div className=\"box\">\r\n                                            <Link to=\"\">\r\n                                                <div className=\"box-job\">\r\n                                                    <img src={logojob} alt=\"\"/>\r\n                                                    <div className=\"box-content\">\r\n                                                        <span className=\"job-name text-uppercase\">IT - Software</span>\r\n                                                        <span className=\"job-tag\">44 Jobs</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <div className=\"box\">\r\n                                            <Link to=\"\">\r\n                                                <div className=\"box-job\">\r\n                                                    <img src={logotaichinh} alt=\"\"/>\r\n                                                    <div className=\"box-content\">\r\n                                                        <span className=\"job-name text-uppercase\">Finance / Investment</span>\r\n                                                        <span className=\"job-tag\">87 Jobs</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <div className=\"box\">\r\n                                            <Link to=\"\">\r\n                                                <div className=\"box-job\">\r\n                                                    <img src={logobanhang} alt=\"\"/>\r\n                                                    <div className=\"box-content\">\r\n                                                        <span className=\"job-name text-uppercase\">Sales</span>\r\n                                                        <span className=\"job-tag\">24 Jobs</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <div className=\"box\">\r\n                                            <Link to=\"\">\r\n                                                <div className=\"box-job\">\r\n                                                    <img src={logomarketing} alt=\"\"/>\r\n                                                    <div className=\"box-content\">\r\n                                                        <span className=\"job-name text-uppercase\">Marketing</span>\r\n                                                        <span className=\"job-tag\">83 Jobs</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"carousel-item row no-gutters\">\r\n                                <div className=\"row industry-card\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <div className=\"box\">\r\n                                            <Link to=\"\">\r\n                                                <div className=\"box-job\">\r\n                                                    <img src={logoitmang} alt=\"\"/>\r\n                                                    <div className=\"box-content\">\r\n                                                        <span className=\"job-name text-uppercase\">Networking</span>\r\n                                                        <span className=\"job-tag\">52 Jobs</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <div className=\"box\">\r\n                                            <Link to=\"\">\r\n                                                <div className=\"box-job\">\r\n                                                    <img src={logonganhang} alt=\"\"/>\r\n                                                    <div className=\"box-content\">\r\n                                                        <span className=\"job-name text-uppercase\">Banking</span>\r\n                                                        <span className=\"job-tag\">23 Jobs</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <div className=\"box\">\r\n                                            <Link to=\"\">\r\n                                                <div className=\"box-job\">\r\n                                                    <img src={logodientu} alt=\"\" />\r\n                                                    <div className=\"box-content\">\r\n                                                        <span className=\"job-name text-uppercase\">Electrical /  Electronic</span>\r\n                                                        <span className=\"job-tag\">74 Jobs</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <div className=\"box\">\r\n                                            <Link to=\"\">\r\n                                                <div className=\"box-job\">\r\n                                                    <img src={logoxaydung} alt=\"\" />\r\n                                                    <div className=\"box-content\">\r\n                                                        <span className=\"job-name text-uppercase\">Civl / Construction</span>\r\n                                                        <span className=\"job-tag\">123 Jobs</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"carousel-item row no-gutters\">\r\n                                <div className=\"row industry-card\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <div className=\"box\">\r\n                                            <Link to=\"\">\r\n                                                <div className=\"box-job\">\r\n                                                    <img src={logoquangcao} alt=\"\"/>\r\n                                                    <div className=\"box-content\">\r\n                                                        <span className=\"job-name text-uppercase\">Advertising / PR</span>\r\n                                                        <span className=\"job-tag\">12 Jobs</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <div className=\"box\">\r\n                                            <Link to=\"\">\r\n                                                <div className=\"box-job\">\r\n                                                    <img src={logonoithat} alt=\"\"/>\r\n                                                    <div className=\"box-content\">\r\n                                                        <span className=\"job-name text-uppercase\">Architeture</span>\r\n                                                        <span className=\"job-tag\">67 Jobs</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <div className=\"box\">\r\n                                            <Link to=\"\">\r\n                                                <div className=\"box-job\">\r\n                                                    <img src={logoketoan} alt=\"\"/>\r\n                                                    <div className=\"box-content\">\r\n                                                        <span className=\"job-name text-uppercase\">Auditing</span>\r\n                                                        <span className=\"job-tag\">7 Jobs</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <div className=\"box\">\r\n                                            <Link to=\"\">\r\n                                                <div className=\"box-job\">\r\n                                                    <img src={logonhansu} alt=\"\"/>\r\n                                                    <div className=\"box-content\">\r\n                                                        <span className=\"job-name text-uppercase\">Human Resource</span>\r\n                                                        <span className=\"job-tag\">52 Jobs</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <a className=\"carousel-control-prev\" href=\"#carouselJobIndustry\" role=\"button\" data-slide=\"prev\">\r\n                            <span className=\"carousel-control-prev-icon bg-dark\" aria-hidden=\"true\"></span>\r\n                            <span className=\"sr-only\">Previous</span>\r\n                        </a>\r\n                        <a className=\"carousel-control-next\" href=\"#carouselJobIndustry\" role=\"button\" data-slide=\"next\">\r\n                            <span className=\"carousel-control-next-icon bg-dark\" aria-hidden=\"true\"></span>\r\n                            <span className=\"sr-only\">Next</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default JobIndustry;","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\homeJobReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\listCompanyReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\listJobReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\callReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\onlineReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\peerReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\messageReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\suggestionsReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\notifyReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\socketReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\detailPostReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\modalReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\statusReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\postReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\discoverReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\themeReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\profileReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\alert2.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\dashboard\\dummyData.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\sidebar\\Sidebar.jsx",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\savedjobs\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\updateResume\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\user\\User.jsx",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\ListCompany.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\reviewResume\\[id].js",["801","802"],"import dateFormat from 'dateformat';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Pdf from \"react-to-pdf\";\r\nimport './ViewCV.scss';\r\n\r\nconst ref = React.createRef();\r\n\r\nconst ReviewResume = () => {\r\n\r\n\tconst initState = {\r\n\t\tfullname: '',\r\n\t\temail: '',\r\n\t\tdateofBirth: '1900-01-01',\r\n\t\timages: '',\r\n\t\tposition: '',\r\n\t\tphoneNumber: '',\r\n\t\taddress: '',\r\n\t\tdescriptionProfile: '',\r\n\t\teducations: [],\r\n\t\texperiences: [],\r\n\t\tavatar: '',\r\n\t\tskill: [],\r\n\t\tlanguage: []\r\n\t}\r\n\r\n\tconst { id } = useParams()\r\n\tconst { allResume} = useSelector(state => state)\r\n\r\n\tconst [resume, setResume] = useState(initState)\r\n\r\n\tuseEffect(() => {\r\n\t\tlet data = {}\r\n\t\tif (allResume.resumes) {\r\n\t\t\tallResume.resumes.map(element => {\r\n\t\t\t\tif (element._id === id) {\r\n\t\t\t\t\tdata = { ...element }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tsetResume(data)\r\n\t}, [allResume.resumes])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"main-1\" ref={ref}>\r\n\t\t\t\t<div className=\"top-section-1\">\r\n\t\t\t\t\t<img className=\"profile-1\" alt=\"avatar\" src={resume.avatar} />\r\n\t\t\t\t\t<p className=\"p1-1\">{resume.fullname}</p>\r\n\t\t\t\t\t<p className=\"p2-1\">{resume.position}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"clearfix-1\"></div>\r\n\t\t\t\t<div className=\"col-div-4-1\">\r\n\t\t\t\t\t<div className=\"content-box-1\" style={{ paddingLeft: '40px' }}>\r\n\t\t\t\t\t\t<p className=\"head-1\">Contact</p>\r\n\t\t\t\t\t\t<p className=\"p3-1\"><i className=\"fa fa-phone\" aria-hidden=\"true\"></i> &nbsp;&nbsp;{resume.phoneNumber}</p>\r\n\t\t\t\t\t\t<p className=\"p3-1\"><i className=\"fa fa-envelope\" aria-hidden=\"true\"></i> &nbsp;&nbsp;{resume.email}</p>\r\n\t\t\t\t\t\t<p className=\"p3-1\"><i className=\"fa fa-home\" aria-hidden=\"true\"></i> &nbsp;&nbsp;{resume.address}</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p className=\"head-1\">my skills</p>\r\n\t\t\t\t\t\t<ul className=\"skills-1\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tresume.skill && resume.skill.map(element => (\r\n\t\t\t\t\t\t\t\t\t<li><span>{element.title}&nbsp;&nbsp;</span></li>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{/* <li><span>{resume.skill}</span></li> */}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p className=\"head-1\">Languages</p>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tresume.language && resume.language.map(element => (\r\n\t\t\t\t\t\t\t\t<p className=\"p3-1\">{element.title}</p>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{/* <p className=\"p3-1\">{resume.language}</p> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"line-1\"></div>\r\n\t\t\t\t<div className=\"col-div-8-1\">\r\n\t\t\t\t\t<div className=\"content-box-1\">\r\n\t\t\t\t\t\t<p className=\"head-1\">profile</p>\r\n\t\t\t\t\t\t<p className=\"p3-1\" style={{ fontSize: \"14px\" }}>{resume.descriptionProfile}</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p className=\"head-1\">EXPERIENCE</p>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tresume.experiences && resume.experiences.map(element => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<p>{element.nameCompany} ({dateFormat(element.startDate, 'mm/yyyy')} - {dateFormat(element.endDate, 'mm/yyyy')})</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"p-4-1\">{element.descriptionExperience}</p>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p className=\"head-1\">Education</p>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tresume.educations && resume.educations.map(element => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<p>{element.nameSchool} ({dateFormat(element.startDate, 'mm/yyyy')} - {dateFormat(element.endDate, 'mm/yyyy')})</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"p-4-1\">{element.descriptionEducation}</p>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"clearfix-1\"></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t<Link className=\"edit-cv mr-2\" to={`/updateResume/${resume._id}`}><button className=\"btn btn-primary\">Edit CV</button></Link>\r\n\t\t\t\t<Pdf targetRef={ref} filename=\"post.pdf\">\r\n\t\t\t\t\t{({ toPdf }) => <button className=\"btn btn-primary\" onClick={toPdf}>Download file PDF</button>}\r\n\t\t\t\t</Pdf>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ReviewResume\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createcv\\Resume.js",["803","804"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\r\nimport { getResume, saveResume } from '../../redux/actions/resumeAction';\r\nimport { checkImage } from '../../utils/imageUpload';\r\nimport Education from './Education';\r\nimport Experience from './Experience';\r\nimport Extras from './Extras';\r\nimport Profile from './Profile';\r\nimport AddSkill from './AddSkill'\r\n\r\n\r\nlet arrEdu = [];\r\nlet arrExp = [];\r\nlet arrSkill = [];\r\n\r\nconst Resume = () => {\r\n\r\n    const { dataResume, auth } = useSelector(state => state)\r\n    const [avatar, setAvatar] = useState(dataResume.avatar ? dataResume.avatar : '')\r\n    const [skill, setSkill] = useState(dataResume.skill ? dataResume.skill : [])\r\n    const [language, setLanguage] = useState(dataResume.language ? dataResume.language : [])\r\n\r\n    const [loadEdu, setLoadEdu] = useState([1])\r\n    const [loadExp, setLoadExp] = useState([1])\r\n\r\n\r\n\r\n    const initState = {\r\n        fullname: '',\r\n        email: '',\r\n        dateofBirth: '1900-01-01',\r\n        position: '',\r\n        phoneNumber: '',\r\n        address: '',\r\n        descriptionProfile: '',\r\n    }\r\n    const [cvData, setCVData] = useState(initState)\r\n\r\n    useEffect(() => {\r\n        if (dataResume.resumes)\r\n            setCVData(dataResume.resumes)\r\n    }, [dataResume])\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target\r\n        setCVData({ ...cvData, [name]: value })\r\n\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handlePreview = async () => {\r\n        await dispatch(getResume(cvData, arrEdu, arrExp, arrSkill, language, avatar))\r\n    }\r\n\r\n    const handleSave = async () => {\r\n        dispatch(saveResume(cvData, arrEdu, arrExp, arrSkill, language, avatar, auth))\r\n    }\r\n\r\n    const changeAvatar = (e) => {\r\n        const file = e.target.files[0]\r\n\r\n        const err = checkImage(file)\r\n        if (err) return dispatch({\r\n            type: GLOBALTYPES.ALERT, payload: { error: err }\r\n        })\r\n        setAvatar(file)\r\n    }\r\n\r\n    const handleDeleteEdu = (i) => {\r\n        arrEdu.splice(i, 1)\r\n        const tmp = loadEdu.splice(i, 1)\r\n        setLoadEdu(tmp)\r\n    }\r\n    const handleDeleteExp = (i) => {\r\n        arrExp.splice(i, 1)\r\n        const tmp = loadExp.splice(i, 1)\r\n        setLoadExp(tmp)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Profile handleInput={handleInput} changeAvatar={changeAvatar} values={cvData} />\r\n            {\r\n                loadEdu.map((element, index) => (\r\n                    <Education index={index} arr={arrEdu} handleDelete={handleDeleteEdu} load={loadEdu} />\r\n                ))\r\n            }\r\n            <div>\r\n                <button type=\"button\" class=\"btn btn-info\" onClick={e => setLoadEdu([...loadEdu, 1])}>Add Education More</button>\r\n            </div>\r\n            {\r\n                loadExp.map((element, index) => (\r\n                    <>\r\n                        <Experience index={index} arr={arrExp} handleDelete={handleDeleteExp} load={loadExp} />\r\n\r\n                    </>\r\n                ))\r\n            }\r\n            <div>\r\n                <button type=\"button\" class=\"btn btn-info\" onClick={e => setLoadExp([...loadExp, 1])}>Add Experience More</button>\r\n            </div>\r\n            <Extras handleInput={handleInput} handleSkill={setSkill} handleLanguage={setLanguage} values={cvData}\r\n                // dataSkill={skill} \r\n                dataSkill={arrSkill}\r\n                dataLanguage={language} />\r\n            <div className=\"mt-3 mb-5\">\r\n                <button type=\"button\" class=\"btn btn-primary btn-lg mr-3\" onClick={handleSave}>Save CV</button>\r\n                <Link to='/viewcv'><button type=\"button\" onClick={handlePreview} class=\"btn btn-primary btn-lg\">Preview</button></Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resume\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\widgetLg\\WidgetLg.jsx",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\profileCompany\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\widgetSm\\WidgetSm.jsx",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\profile\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\becomeCompany\\CompanyInfor.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\post\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\jobs\\JobsComponent.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\jobs\\SearchJob.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\message\\index.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\message\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\NotifyModal.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\managecv\\index.js",["805","806"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ManageCV from '../../components/managecv/ManageCV'\r\nimport { getAllResume } from '../../redux/actions/resumeAction'\r\n\r\nconst ManageCVs = () => {\r\n\r\n    const { auth } = useSelector(state => state)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(async () => {\r\n        await dispatch(getAllResume(auth))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <ManageCV />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ManageCVs\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\viewcv\\ViewCV.js",["807"],"import React, { useEffect, useState } from 'react'\r\nimport './ViewCV.scss'\r\nimport Pdf from \"react-to-pdf\";\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport dateFormat from 'dateformat';\r\n\r\nconst ref = React.createRef();\r\n\r\nconst ViewCV = () => {\r\n\r\n\tconst initState = {\r\n\t\tfullname: '',\r\n\t\temail: '',\r\n\t\tdateofBirth: '1900-01-01',\r\n\t\timages: '',\r\n\t\tposition: '',\r\n\t\tphoneNumber: '',\r\n\t\taddress: '',\r\n\t\tdescriptionProfile: '',\r\n\t\teducations: [],\r\n\t\texperiences: [],\r\n\t\tskill: '',\r\n\t\tlanguage: ''\r\n\t}\r\n\tconst { dataResume } = useSelector(state => state)\r\n\r\n\tconst [resume, setResume] = useState(dataResume.resumes ? dataResume.resumes : initState)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataResume.resumes)\r\n\t\t\tsetResume(dataResume.resumes)\r\n\t\t// console.log(resume)\r\n\t}, [dataResume])\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"main-1\" ref={ref} >\r\n\t\t\t\t<div className=\"top-section-1\">\r\n\t\t\t\t\t<img className=\"profile-1\" alt=\"avatr\" src={dataResume.avatar} />\r\n\t\t\t\t\t<p className=\"p1-1\">{resume.fullname}</p>\r\n\t\t\t\t\t<p className=\"p2-1\">{resume.position}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"clearfix-1\"></div>\r\n\t\t\t\t<div className=\"col-div-4-1\">\r\n\t\t\t\t\t<div className=\"content-box-1\" style={{ paddingLeft: '40px' }}>\r\n\t\t\t\t\t\t<p className=\"head-1\">Contact</p>\r\n\t\t\t\t\t\t<p className=\"p3-1\"><i className=\"fa fa-phone\" aria-hidden=\"true\"></i> &nbsp;&nbsp;{resume.phoneNumber}</p>\r\n\t\t\t\t\t\t<p className=\"p3-1\"><i className=\"fa fa-envelope\" aria-hidden=\"true\"></i> &nbsp;&nbsp;{resume.email}</p>\r\n\t\t\t\t\t\t<p className=\"p3-1\"><i className=\"fa fa-home\" aria-hidden=\"true\"></i> &nbsp;&nbsp;{resume.address}</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p className=\"head-1\">my skills</p>\r\n\t\t\t\t\t\t<ul className=\"skills-1\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tresume.skill && resume.skill.map(element => (\r\n\t\t\t\t\t\t\t\t\t<li><span>{element.title}&nbsp;&nbsp;</span></li>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p className=\"head-1\">Languages</p>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tresume.language && resume.language.map(element => (\r\n\t\t\t\t\t\t\t\t<p className=\"p3-1\">{element.title}</p>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"line-1\"></div>\r\n\t\t\t\t<div className=\"col-div-8-1\">\r\n\t\t\t\t\t<div className=\"content-box-1\">\r\n\t\t\t\t\t\t<p className=\"head-1\">profile</p>\r\n\t\t\t\t\t\t<p className=\"p3-1\" style={{ fontSize: \"14px\" }}>{resume.descriptionProfile}</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p className=\"head-1\">EXPERIENCE</p>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tresume.experiences && resume.experiences.map(element => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<p>{element.nameCompany} ({dateFormat(element.startDate, 'mm/yyyy')} - {dateFormat(element.endDate, 'mm/yyyy')})</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"p-4-1\">{element.descriptionExperience}</p>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p className=\"head-1\">Education</p>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tresume.educations && resume.educations.map(element => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<p>{element.nameSchool} ({dateFormat(element.startDate, 'mm/yyyy')} - {dateFormat(element.endDate, 'mm/yyyy')})</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"p-4-1\">{element.descriptionEducation}</p>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"clearfix-1\"></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"text-center mb-5\">\r\n\t\t\t\t<Link className=\"edit-cv mr-2\" to={'/createCV'}><button className=\"btn btn-primary btn-lg\">Edit CV</button></Link>\r\n\t\t\t\t<Pdf targetRef={ref} filename=\"post.pdf\">\r\n\t\t\t\t\t{({ toPdf }) => <button className=\"btn btn-primary btn-lg\" onClick={toPdf}>Download file PDF</button>}\r\n\t\t\t\t</Pdf>\r\n\t\t\t</div>\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default ViewCV\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\profileAction.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\discoverAction.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createcv\\Extras.js",["808","809","810"],"import React, { useState } from 'react'\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport AddSkill from './AddSkill'\r\n\r\nlet arrSkill = []\r\n\r\nconst Extras = ({ handleInput, handleSkill, handleLanguage, values, dataSkill, dataLanguage }) => {\r\n\r\n  const topSkill = [\r\n    { title: 'JavaScript' },\r\n    { title: 'Problem-Solving Skills' },\r\n    { title: 'Planning and Organizational Skills' },\r\n    { title: 'Data Analysis' },\r\n    { title: 'Adaptability' },\r\n    { title: \"Other\" }\r\n  ];\r\n\r\n  const topLanguage = [\r\n    { title: \"English\" },\r\n    { title: \"Japanses\" },\r\n    { title: \"Chineses\" },\r\n    { title: \"Korean Laguage\" },\r\n    { title: \"Other\" }\r\n  ]\r\n  const onTagsChangeSkill = (event, values) => {\r\n\r\n    handleSkill(values)\r\n\r\n  }\r\n  const onTagsChangeLanguage = (event, values) => {\r\n    handleLanguage(values)\r\n  }\r\n\r\n  const [load, setLoad] = useState([1])\r\n\r\n  const handleDeleteSkill = (i) => {\r\n    dataSkill.splice(i, 1)\r\n    load.splice(i, 1)\r\n    let tmp = [...load]\r\n    setLoad(tmp)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"extras-cv mt-5\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h3 className=\"mb-3\">Extras Details</h3>\r\n          <form>\r\n            <div className=\"row mb-3\">\r\n              <label for=\"\" className=\"col-sm-3 col-form-label\">Skill</label>\r\n              <div className=\"col-sm-8\">\r\n                {/* <Autocomplete\r\n                  multiple\r\n                  limitTags={2}\r\n                  id=\"multiple-limit-tags\"\r\n                  options={topSkill}\r\n                  onChange={onTagsChangeSkill}\r\n                  defaultValue={dataSkill}\r\n                  getOptionLabel={(option) => option.title}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"Skill\" placeholder=\"Skill\" />\r\n                  )}\r\n                /> */}\r\n                {\r\n                  load.map((data, index) => (\r\n                    <AddSkill index={index} load={load} handleDeleteSkill={handleDeleteSkill} arr={dataSkill} />\r\n                  ))\r\n                }\r\n                <button type=\"button\" onClick={e => setLoad([...load, 1])} class=\"btn btn-primary btn-save\">Add skill</button>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row mb-3\">\r\n              <label for=\"\" className=\"col-sm-3 col-form-label\">Language</label>\r\n              <div className=\"col-sm-8\">\r\n                <Autocomplete\r\n                  multiple\r\n                  limitTags={2}\r\n                  id=\"multiple-limit-tags\"\r\n                  options={topLanguage}\r\n                  onChange={onTagsChangeLanguage}\r\n                  defaultValue={dataLanguage}\r\n                  getOptionLabel={(option) => option.title}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"Language\" placeholder=\"Language\" />\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Extras\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createcv\\Profile.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createcv\\Experience.js",["811"],"import React, { useEffect, useState } from 'react'\r\nimport dateFormat from 'dateformat'\r\n\r\nconst Experience = ({ index, arr, handleDelete, load }) => {\r\n  const initState = {\r\n    nameCompany: '',\r\n    positionCompany: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    descriptionExperience: ''\r\n  }\r\n  const [data, setData] = useState(initState)\r\n\r\n  useEffect(() => {\r\n    if (arr[index]) {\r\n      setData(arr[index])\r\n    }\r\n  }, [load])\r\n\r\n  const handleInputEducation = e => {\r\n    const { name, value } = e.target\r\n    setData({ ...data, [name]: value })\r\n    arr[index] = data\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"experience-cv mt-5\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h3 className=\"mb-3\">Experience Details</h3>\r\n          <form>\r\n            <div className=\"row mb-3\">\r\n              <label for=\"\" className=\"col-sm-3 col-form-label\">Name Company</label>\r\n              <div className=\"col-sm-8\">\r\n                <input type=\"text\" className=\"form-control\" onChange={handleInputEducation} value={data.nameCompany} name='nameCompany' placeholder=\"Ex: FPT Software\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label for=\"\" className=\"col-sm-3 col-form-label\">Position</label>\r\n              <div className=\"col-sm-8\">\r\n                <input type=\"email\" className=\"form-control\" onChange={handleInputEducation} value={data.positionCompany} name='positionCompany' placeholder=\"Ex: Ceo\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label for=\"\" className=\"col-sm-3 col-form-label\">Time</label>\r\n              <label for=\"\" className=\"col-sm-1 col-form-label\">From</label>\r\n              <div className=\"col-sm-3\">\r\n                <input type=\"date\" className=\"form-control\" onChange={handleInputEducation} value={dateFormat(data.startDate, 'yyyy-mm-dd')} name=\"startDate\" />\r\n              </div>\r\n              <label for=\"\" className=\"col-sm-1 col-form-label\">To Year</label>\r\n              <div className=\"col-sm-3\">\r\n                <input type=\"date\" className=\"form-control\" onChange={handleInputEducation} value={dateFormat(data.endDate, 'yyyy-mm-dd')} name=\"endDate\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label for=\"\" className=\"col-sm-3 col-form-label\">Description</label>\r\n              <div className=\"col-sm-8\">\r\n                <textarea className=\"form-control\" onChange={handleInputEducation} value={data.descriptionExperience} name='descriptionExperience' placeholder=\"Description\"></textarea>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <hr />\r\n          <button type=\"button\" class=\"btn btn-info\" onClick={e => handleDelete(index)}>Delete</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Experience\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createcv\\Education.js",["812"],"import React, { useEffect, useState } from 'react'\r\nimport dateFormat from 'dateformat'\r\n\r\nconst Education = ({ index, arr, handleDelete, load }) => {\r\n\r\n  const initState = {\r\n    nameSchool: '',\r\n    major: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    descriptionEducation: ''\r\n  }\r\n\r\n  const [data, setData] = useState(initState)\r\n\r\n  useEffect(() => {\r\n    if (arr[index]) {\r\n      setData(arr[index])\r\n    }\r\n  }, [load])\r\n\r\n\r\n\r\n  const handleInputEducation = e => {\r\n    const { name, value } = e.target\r\n    setData({ ...data, [name]: value })\r\n    arr[index] = data\r\n    console.log('arrindex', arr[index])\r\n  }\r\n\r\n  return (\r\n    <div className=\"education-cv mt-5\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h3 className=\"mb-3\">Education Details</h3>\r\n          <form>\r\n            <div className=\"row mb-3\">\r\n              <label for=\"\" className=\"col-sm-3 col-form-label\">Name</label>\r\n              <div className=\"col-sm-8\">\r\n                <input type=\"text\" className=\"form-control\" onChange={handleInputEducation} value={data.nameSchool} name='nameSchool' placeholder=\"Ex: Duy Tan University\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label for=\"\" className=\"col-sm-3 col-form-label\">Khoa/ Nganh</label>\r\n              <div className=\"col-sm-8\">\r\n                <input type=\"email\" className=\"form-control\" onChange={handleInputEducation} value={data.major} name='major' placeholder=\"Ex: Technology Information\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label for=\"\" className=\"col-sm-3 col-form-label\">Time</label>\r\n              <label for=\"\" className=\"col-sm-1 col-form-label\">From</label>\r\n              <div className=\"col-sm-3\">\r\n                <input type=\"date\" className=\"form-control\" onChange={handleInputEducation} value={dateFormat(data.startDate, 'yyyy-mm-dd')} name='startDate' />\r\n              </div>\r\n              <label for=\"\" className=\"col-sm-1 col-form-label\">To Year</label>\r\n              <div className=\"col-sm-3\">\r\n                <input type=\"date\" className=\"form-control\" onChange={handleInputEducation} value={dateFormat(data.endDate, 'yyyy-mm-dd')} name='endDate' />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label for=\"\" className=\"col-sm-3 col-form-label\">Description</label>\r\n              <div className=\"col-sm-8\">\r\n                <textarea className=\"form-control\" onChange={handleInputEducation} value={data.descriptionEducation} name='descriptionEducation' placeholder=\"Description\"></textarea>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <hr />\r\n          <button type=\"button\" class=\"btn btn-info\" onClick={e => handleDelete(index)}>Delete</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Education\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\updateResume\\Resume.js",["813"],"import React, { useEffect, useState } from 'react'\r\nimport Profile from './Profile';\r\nimport Education from './Education';\r\nimport Experience from './Experience';\r\nimport Extras from './Extras';\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { getResume, updateResume } from '../../redux/actions/resumeAction'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { checkImage } from '../../utils/imageUpload';\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\r\n\r\n\r\n\r\nconst Resume = () => {\r\n\r\n    const { allResume, auth } = useSelector(state => state)\r\n    const { id } = useParams()\r\n\r\n\r\n    const initState = {\r\n        fullname: '',\r\n        email: '',\r\n        dateofBirth: '1900-01-01',\r\n        images: '',\r\n        position: '',\r\n        phoneNumber: '',\r\n        address: '',\r\n        descriptionProfile: '',\r\n        nameSchool: '',\r\n        major: '',\r\n        startDateEducation: '',\r\n        endDateEducation: '',\r\n        descriptionEducation: '',\r\n        nameCompany: '',\r\n        positonCompan: '',\r\n        startDateExperience: '',\r\n        endDateExperience: '',\r\n        descriptionExperience: '',\r\n    }\r\n    const [cvData, setcvData] = useState(allResume.resumes ? allResume.resumes.filter(element => id === element._id) : initState)\r\n    const [avatar, setAvatar] = useState(allResume.resumes.filter(element => id === element._id).avatar)\r\n    const [skill, setSkill] = useState([])\r\n    const [language, setLanguage] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (allResume.resumes) {\r\n            const cv = allResume.resumes.filter(element => element._id === id)\r\n            setSkill(cv[0].skill)\r\n            setLanguage(cv[0].language)\r\n            setcvData({ ...cv[0] })\r\n        }\r\n\r\n    }, [allResume.resumes])\r\n\r\n    const handleInput = e => { //[]\r\n        const { name, value } = e.target\r\n        \r\n        setcvData({ ...cvData, [name]: value })\r\n\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handlePreview = async () => {\r\n        await dispatch(getResume(cvData, skill, language, avatar))\r\n\r\n    }\r\n\r\n    const handleUpdate = async () => {\r\n        await dispatch(updateResume(id, cvData, skill, language, avatar, auth))\r\n\r\n    }\r\n\r\n    const changeAvatar = (e) => {\r\n        const file = e.target.files[0]\r\n\r\n        const err = checkImage(file)\r\n        if (err) return dispatch({\r\n            type: GLOBALTYPES.ALERT, payload: { error: err }\r\n        })\r\n        setAvatar(file)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Profile handleInput={handleInput} changeAvatar={changeAvatar} values={cvData} />\r\n            <Education handleInput={handleInput} values={cvData} />\r\n            <Experience handleInput={handleInput} values={cvData} />\r\n            <Extras handleInput={handleInput} handleData={setSkill} handleLanguage={setLanguage} values={cvData} />\r\n            <div className=\"mt-3\">\r\n                <button type=\"button\" class=\"btn btn-primary mr-3\" onClick={handleUpdate}>Update CV</button>\r\n                <Link to={`/reviewResume/${id}`}><button type=\"button\" onClick={handlePreview} class=\"btn btn-primary\">Preview</button></Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resume\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\PostCard.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\becomeCompany\\Profile.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\profileCompany\\Info.js",["814"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\nimport Avatar from '../Avatar'\r\nimport EditProfileCompany from './EditProfileCompany'\r\n\r\nconst Info = ({ id, auth, profile, dispatch }) => {\r\n    const [companyData, setCompanyData] = useState([])\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const { listCompany } = useSelector(state => state)\r\n\r\n\r\n    const [showFollowers, setShowFollowers] = useState(false)\r\n    const [showFollowing, setShowFollowing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        // if (id === auth.user._id) {\r\n        //     setCompanyData([auth.user])\r\n        // } else {\r\n        //     const newData = listCompany.companies.filter(user => user._id === id)\r\n        //     setCompanyData(newData)\r\n        // }\r\n\r\n\r\n        const newData = listCompany.companies.filter(company => id === company.idCompany)\r\n\r\n        setCompanyData(newData)\r\n\r\n        // dispatch(getProfileCompany(id, auth))\r\n\r\n    }, [id, auth, listCompany.companies])\r\n\r\n\r\n    useEffect(() => {\r\n        if (showFollowers || showFollowing || onEdit) {\r\n            dispatch({ type: GLOBALTYPES.MODAL, payload: true })\r\n        } else {\r\n            dispatch({ type: GLOBALTYPES.MODAL, payload: false })\r\n        }\r\n    }, [showFollowers, showFollowing, onEdit, dispatch])\r\n\r\n\r\n    return (\r\n        <div className=\"info\" onLoad={window.scrollTo(0, 0)}>\r\n            {\r\n                companyData.map(company => (\r\n                    <div className=\"info_container\" key={company.idCompany}>\r\n                        <Avatar src={company.logo} size=\"supper-avatar\" />\r\n\r\n                        <div className=\"info_content\">\r\n                            <div className=\"info_content_title\">\r\n                                <h2>{company.companyName}</h2>\r\n                                <button className=\"btn btn-outline-info\"\r\n                                    onClick={() => setOnEdit(true)}>\r\n                                    Edit Profile Company\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"follow_btn\">\r\n                                <span className=\"mr-4\" onClick={() => setShowFollowers(true)}>\r\n                                    {auth.user.followersCompany.length} Followers\r\n                                </span>\r\n                                {/* <span className=\"ml-4\" onClick={() => setShowFollowing(true)}>\r\n                                    {company.following.length} Following\r\n                                </span> */}\r\n                            </div>\r\n\r\n                            {/* <h6>{company.companyName} <span className=\"text-danger\">{company.phoneNumber}</span></h6>\r\n                            <p className=\"m-0\">{company.address}</p> */}\r\n                            <h6 className=\"m-0\">{company.email}</h6>\r\n                            <a href={company.website} target=\"_blank\" rel=\"noreferrer\">\r\n                                {company.website}\r\n                            </a>\r\n                            <p>{auth.user.email}</p>\r\n                        </div>\r\n\r\n                        {\r\n                            onEdit && <EditProfileCompany data={company} setOnEdit={setOnEdit} />\r\n                        }\r\n\r\n                        {/* {\r\n                            showFollowers &&\r\n                            <Followers\r\n                                users={user.followers}\r\n                                setShowFollowers={setShowFollowers}\r\n                            />\r\n                        }\r\n                        {\r\n                            showFollowing &&\r\n                            <Following\r\n                                users={user.following}\r\n                                setShowFollowing={setShowFollowing}\r\n                            />\r\n                        } */}\r\n\r\n                        {/* company */}\r\n                        <div className=\"col-xl-12 order-xl-1\" style={{ margin: '20px auto' }}>\r\n                            <div className=\"card\">\r\n                                {/* <div className=\"card-header\">\r\n                                    <div className=\"row align-items-center\">\r\n                                        <div className=\"col-8\">\r\n                                            <h3 className=\"mb-0\">Edit profile </h3>\r\n                                        </div>\r\n                                        <div className=\"col-4 text-right\">\r\n                                            <a href=\"#!\" className=\"btn btn-sm btn-primary\">Settings</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <h6 className=\"heading-small text-muted mb-4\">Company information</h6>\r\n                                        <div className=\"pl-lg-4\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-lg-6\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"form-control-label\" htmlFor=\"input-companyName\">Company Name</label>\r\n                                                        <input type=\"text\" id=\"input-companyName\" className=\"form-control\" defaultValue={company.companyName} placeholder=\"Company Name\" readOnly />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-lg-6\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"form-control-label\" htmlFor=\"input-industry\">Industry</label>\r\n                                                        <input type=\"text\" id=\"input-industry\" className=\"form-control\" defaultValue={company.industry} placeholder=\"Industry\" readOnly />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-lg-6\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"form-control-label\" htmlFor=\"input-company-size\">Company Size</label>\r\n                                                        <input type=\"text\" id=\"input-company-size\" className=\"form-control\" defaultValue={company.companySize} placeholder=\"Company Size\" readOnly />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-lg-6\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"form-control-label\" htmlFor=\"input-website\">Website</label>\r\n                                                        <input type=\"text\" id=\"input-website\" className=\"form-control\" defaultValue={company.website} placeholder=\"Website\" readOnly />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr className=\"my-4\" />\r\n                                        {/* Address */}\r\n                                        <h6 className=\"heading-small text-muted mb-4\">Contact information</h6>\r\n                                        <div className=\"pl-lg-4\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"form-control-label\" htmlFor=\"input-address\">Address</label>\r\n                                                        <input id=\"input-address\" className=\"form-control\" placeholder=\"Home Address\" readOnly defaultValue={company.address} type=\"text\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-lg-4\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"form-control-label\" htmlFor=\"input-phone-number\">Phone Number</label>\r\n                                                        <input type=\"text\" id=\"input-phone-number\" defaultValue={company.phoneNumber} className=\"form-control\" readOnly placeholder=\"Phone number\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* <div className=\"col-lg-4\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"form-control-label\" htmlFor=\"input-country\">Country</label>\r\n                                                        <input type=\"text\" id=\"input-country\" className=\"form-control\" placeholder=\"Country\" defaultValue=\"United States\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-lg-4\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"form-control-label\" htmlFor=\"input-country\">Postal code</label>\r\n                                                        <input type=\"number\" id=\"input-postal-code\" className=\"form-control\" placeholder=\"Postal code\" />\r\n                                                    </div>\r\n                                                </div> */}\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr className=\"my-4\" />\r\n                                        {/* Description */}\r\n                                        <h6 className=\"heading-small text-muted mb-4\">About company</h6>\r\n                                        <div className=\"pl-lg-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"form-control-label\">Description about company</label>\r\n                                                <textarea rows={4} className=\"form-control\" placeholder=\"A few words about your company ...\" readOnly defaultValue={company.info} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\profile\\Info.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\message\\RightSide.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\message\\LeftSide.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\savedjob\\SavedJob.js",["815","816","817"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport './SavedJob.scss'\r\nimport dateFormat from 'dateformat'\r\nimport SubmitCVModal from '../submitcvmodal/SubmitCVModal'\r\nimport FollowCompanyBtn from '../FollowJobBtn'\r\n\r\nconst SavedJob = () => {\r\n    const { auth, allJob } = useSelector(state => state)\r\n    const [infoSavedJob, setSavedJob] = useState([])\r\n    const [ShowSubmitCV, setShowSubmitCV] = useState(false)\r\n    useEffect(() => {\r\n        const jobs = allJob.jobs ? allJob.jobs : []\r\n        const savedJob = auth.user.followJob ? auth.user.followJob : []\r\n        let arr = []\r\n        jobs.filter(element => {\r\n            savedJob.map(idJob => {\r\n                if (element._id === idJob) {\r\n                    arr = [...arr, element]\r\n                }\r\n            })\r\n        })\r\n        setSavedJob([...arr])\r\n    }, [auth.user])\r\n\r\n    return (\r\n        <div className=\"saved-job-view container\">\r\n            <h3 className=\"text-center mt-3\">Manage Saved Jobs</h3>\r\n            <div className=\"saved-job-content card mt-3\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"saved-job-list\">\r\n                        {\r\n                            infoSavedJob.map(element => (\r\n                                <div className=\"list-jobs\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-9\">\r\n                                            <div className=\"name-job\">\r\n                                                <Link to={`/jobdetail/${element._id}`}><span>{element.position}</span></Link>\r\n                                            </div>\r\n                                            <div className=\"name-company\">\r\n                                                <Link to={`/companydetail/${element.idCompany}`}><span >{element.companyName}</span></Link>\r\n                                            </div>\r\n                                            <div className=\"row mt-1\">\r\n                                                <div className=\"col-sm-4\">\r\n                                                    <span className=\"font-weight-bold\">Salary: </span><span> {element.minSalary / 1000000} - {element.maxSalary / 1000000} Million</span>\r\n                                                </div>\r\n                                                <div className=\"col-sm-4\">\r\n                                                    <span className=\"font-weight-bold\">Location: </span><span> {element.address}</span>\r\n                                                </div>\r\n                                                <div className=\"col-sm-4\">\r\n                                                    <span className=\"font-weight-bold text-danger\">Expired: </span><span> {dateFormat(element.endDate, 'dd/mm/yyyy')}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-3\">\r\n                                            <div className=\"btn-saved-job mt-3\">\r\n                                                {/* <Link><button type=\"button\" className=\"btn btn-apply-job\"><i className=\"far fa-paper-plane\"></i> Apply</button></Link>\r\n                                                <button type=\"button\" className=\"btn btn-unsave-job\"><i className=\"far fa-heart\"></i> Unsave</button> */}\r\n                                                <button type=\"button\" className=\"btn btn-apply-job\" onClick={() => setShowSubmitCV(true)}><i className=\"far fa-paper-plane\"></i> Apply</button>\r\n                                                {\r\n                                                    ShowSubmitCV &&\r\n                                                    <SubmitCVModal\r\n                                                        setShowSubmitCV={setShowSubmitCV}\r\n                                                        job={element} />\r\n                                                }\r\n                                                <FollowCompanyBtn className=\"btn btn-unsave-job\" job={element} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n\r\n                                </div>\r\n                            ))\r\n                        }\r\n\r\n                        {/* <div className=\"list-jobs\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-9\">\r\n                                    <div className=\"name-job\">\r\n                                        <Link><span>FullStack Developer ReactJS</span></Link>\r\n                                    </div>\r\n                                    <div className=\"name-company\">\r\n                                        <Link><span >FPT Software Da nang</span></Link>\r\n                                    </div>\r\n                                    <div className=\"row mt-1\">\r\n                                        <div className=\"col-sm-4\">\r\n                                            <span className=\"font-weight-bold\">Salary: </span><span> 12 - 15 Million</span>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <span className=\"font-weight-bold\">Location: </span><span> Da Nang</span>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4\">\r\n                                            <span className=\"font-weight-bold text-danger\">Expired: </span><span> 21-11-2021</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-3\">\r\n                                    <div className=\"btn-saved-job mt-3\">\r\n                                        <Link><button type=\"button\" className=\"btn btn-apply-job\"><i className=\"far fa-paper-plane\"></i> Apply</button></Link>\r\n                                        <button type=\"button\" className=\"btn btn-unsave-job\"><i className=\"far fa-heart\"></i> Unsave</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedJob\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\managecv\\ManageCV.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\profileCompany\\EditProfileCompany.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\message\\MsgDisplay.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\InputComment.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\Comments.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\UserCard.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\profile\\Following.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\post_card\\CardFooter.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\FollowJobBtn.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\profile\\Followers.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\submitcvmodal\\SubmitCVModal.js",["818","819","820","821"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\nimport './SubmitCVModal.scss'\r\nimport { submitCV } from '../../redux/actions/resumeAction'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst SubmitCVModal = ({ setShowSubmitCV, job }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    // const { id } = useParams()\r\n    const { auth, allResume, socket, allJob } = useSelector(state => state)\r\n    const [resumes, setResumes] = useState([])\r\n    const [selected, setSelected] = useState({})\r\n    const [idCompany, setIdCompany] = useState('')\r\n    useEffect(() => {\r\n        if (allResume.resumes) {\r\n            setResumes(allResume.resumes)\r\n            setSelected(allResume.resumes[0])\r\n        }\r\n        if (allJob.jobs) {\r\n            allJob.jobs.map(element => {\r\n                if (element._id === job._id)\r\n                    setIdCompany(element.idCompany)\r\n            })\r\n        }\r\n        if (allJob.searchJob) {\r\n            allJob.searchJob.map(element => {\r\n                if (element._id === job._id)\r\n                    setIdCompany(element.idCompany)\r\n            })\r\n        }\r\n        console.log(idCompany)\r\n    }, [allResume.resumes])\r\n\r\n    const handleOnChange = (data) => {\r\n        setSelected(data)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        dispatch(submitCV(job._id, idCompany, selected, auth, socket))\r\n        setShowSubmitCV(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"submit-cv\" onLoad={window.scrollTo(0, 0)}>\r\n            <div className=\"submit-cv-box\">\r\n                <h4 className=\"text-center font-weight-bold\">Apply Now</h4>\r\n                <hr />\r\n                <h6>You are applying for:</h6>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <span className=\"name-job\"> {job.position}</span>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <h6>You have <span>{resumes.length}</span> resume on RankWorks. Please select a resume to apply for:</h6>\r\n                <div className=\"mt-3 list-cv-data\">\r\n                    {resumes.map((data, index) => (\r\n                        <>\r\n                            <input type=\"radio\"\r\n                                name=\"vote\"\r\n                                value={data}\r\n                                id={data._id}\r\n                                key={index}\r\n                                checked={selected._id === data._id}\r\n                                onChange={e => handleOnChange(data)} />\r\n                            <label key={index} htmlFor={data._id} title={data.position}>{data.position}</label>\r\n                        </>\r\n\r\n                    ))}\r\n                </div>\r\n                <div className=\"button-submit-cv text-center\">\r\n                    {resumes.length > 0 ? <button type=\"button\" class=\"btn btn-submit-cv\" onClick={handleSubmit}><i className=\"far fa-paper-plane\" ></i> Send</button> : <h6>Please create CV</h6>}\r\n                </div>\r\n                <hr />\r\n                <div className=\"button-no-cv mt-4\">\r\n                    <p className=\"font-weight-bold\">If you do not have a resume file:</p>\r\n                    <Link to={'/createCV'}><button type=\"button\" className=\"btn btn-new-cv-1 text-uppercase\"><i className=\"fas fa-pen-alt\"></i> Create CV online</button></Link>\r\n                </div>\r\n                <div className=\"close-submit\" onClick={() => setShowSubmitCV(false)}>\r\n                    &times;\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitCVModal\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\FollowBtn.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\profile\\EditProfile.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\updateResume\\Extras.js",["822"],"import React from 'react'\r\nimport Chip from '@mui/material/Chip';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\n\r\nconst Extras = ({ handleInput, handleData, handleLanguage, values }) => {\r\n\r\n  const topSkill = [\r\n    { title: 'JavaScript' },\r\n    { title: 'Problem-Solving Skills' },\r\n    { title: 'Planning and Organizational Skills' },\r\n    { title: 'Data Analysis' },\r\n    { title: 'Adaptability' },]\r\n\r\n  const topLanguage = [\r\n    { title: \"English\" },\r\n    { title: \"Japanses\" },\r\n    { title: \"Chineses\" },\r\n    { title: \"Korean Laguage\" },\r\n    { title: \"Other\" }\r\n  ]\r\n  const onTagsChange = (event, values) => {\r\n\r\n    handleData(values)\r\n  }\r\n  const onTagsChangeLanguage = (event, values) => {\r\n    handleLanguage(values)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"extras-cv mt-5\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h3 className=\"mb-3\">Extras Details</h3>\r\n          <form>\r\n            <div className=\"row mb-3\">\r\n              <label for=\"\" className=\"col-sm-3 col-form-label\">Skill</label>\r\n              <div className=\"col-sm-8\">\r\n                {/* <input type=\"text\" className=\"form-control\" onChange={handleInput} value={values.skill} name='skill' placeholder=\"Ex: Java\" /> */}\r\n                <Autocomplete\r\n                  multiple\r\n                  limitTags={2}\r\n                  id=\"multiple-limit-tags\"\r\n                  options={topSkill}\r\n                  onChange={onTagsChange}\r\n                  defaultValue={values.skill}\r\n                  getOptionLabel={(option) => option.title}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"limitTags\" placeholder=\"Skill\" />\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <button type=\"button\" class=\"btn btn-info\">Add Skill More</button>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label for=\"\" className=\"col-sm-3 col-form-label\">Language</label>\r\n              <div className=\"col-sm-8\">\r\n                {/* <input type=\"text\" className=\"form-control\" onChange={handleInput} defaultValue={values.language} name='language' placeholder=\"Ex: English\" /> */}\r\n                <Autocomplete\r\n                  multiple\r\n                  limitTags={2}\r\n                  id=\"multiple-limit-tags\"\r\n                  options={topLanguage}\r\n                  onChange={onTagsChangeLanguage}\r\n                  defaultValue={values.language}\r\n                  getOptionLabel={(option) => option.title}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"limitTags\" placeholder=\"Skill\" />\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div>\r\n              <button type=\"button\" class=\"btn btn-info\">Add Language More</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Extras\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\post_card\\CardBody.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\updateResume\\Education.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\updateResume\\Experience.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\post_card\\CardHeader.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\updateResume\\Profile.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\profileCompanyAction.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\message\\Times.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\actions\\commentAction.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\utils\\config.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\LikeButton.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\ShareModal.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\comments\\CommentDisplay.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\Carousel.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\comments\\CommentCard.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\comments\\CommentMenu.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\manage\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\home.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\jobdetail\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\discover.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\detailResume\\[id].js",["823","824","825","826","827","828","829"],"import dateFormat from 'dateformat';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Pdf from \"react-to-pdf\";\r\nimport './ViewCV.scss';\r\n\r\nconst ref = React.createRef();\r\n\r\nconst ReviewResume = () => {\r\n\r\n\tconst initState = {\r\n\t\tfullname: '',\r\n\t\temail: '',\r\n\t\tdateofBirth: '1900-01-01',\r\n\t\timages: '',\r\n\t\tposition: '',\r\n\t\tphoneNumber: '',\r\n\t\taddress: '',\r\n\t\tdescriptionProfile: '',\r\n\t\teducations: [],\r\n\t\texperiences: [],\r\n\t\tavatar: '',\r\n\t\tskill: [],\r\n\t\tlanguage: []\r\n\t}\r\n\r\n\r\n\tconst { id } = useParams()\r\n\r\n\tconst { submited, auth } = useSelector(state => state)\r\n\tconst [resume, setResume] = useState(initState)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tlet data = {}\r\n\t\tif (submited.submited.cv) {\r\n\t\t\tsubmited.submited.cv.map(element => {\r\n\t\t\t\tif (element.idCV === id)\r\n\t\t\t\t\tdata = { ...element.dataCV }\r\n\t\t\t})\r\n\t\t\tsetResume({ ...data })\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst handleAccept = () => {\r\n\t\t// dispatch(acceptResume())\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"main-1\" ref={ref}>\r\n\t\t\t\t<div className=\"top-section-1\">\r\n\t\t\t\t\t<img className=\"profile-1\" alt=\"avatar\" src={resume.avatar} />\r\n\t\t\t\t\t<p className=\"p1-1\">{resume.fullname}</p>\r\n\t\t\t\t\t<p className=\"p2-1\">{resume.position}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"clearfix-1\"></div>\r\n\t\t\t\t<div className=\"col-div-4-1\">\r\n\t\t\t\t\t<div className=\"content-box-1\" style={{ paddingLeft: '40px' }}>\r\n\t\t\t\t\t\t<p className=\"head-1\">Contact</p>\r\n\t\t\t\t\t\t<p className=\"p3-1\"><i className=\"fa fa-phone\" aria-hidden=\"true\"></i> &nbsp;&nbsp;{resume.phoneNumber}</p>\r\n\t\t\t\t\t\t<p className=\"p3-1\"><i className=\"fa fa-envelope\" aria-hidden=\"true\"></i> &nbsp;&nbsp;{resume.email}</p>\r\n\t\t\t\t\t\t<p className=\"p3-1\"><i className=\"fa fa-home\" aria-hidden=\"true\"></i> &nbsp;&nbsp;{resume.address}</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p className=\"head-1\">my skills</p>\r\n\t\t\t\t\t\t<ul className=\"skills-1\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tresume.skill && resume.skill.map(element => (\r\n\t\t\t\t\t\t\t\t\t<li><span>{element.title}&nbsp;&nbsp;</span></li>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{/* <li><span>{resume.skill}</span></li> */}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p className=\"head-1\">Languages</p>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tresume.language && resume.language.map(element => (\r\n\t\t\t\t\t\t\t\t<p className=\"p3-1\">{element.title}</p>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{/* <p className=\"p3-1\">{resume.language}</p> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"line-1\"></div>\r\n\t\t\t\t<div className=\"col-div-8-1\">\r\n\t\t\t\t\t<div className=\"content-box-1\">\r\n\t\t\t\t\t\t<p className=\"head-1\">profile</p>\r\n\t\t\t\t\t\t<p className=\"p3-1\" style={{ fontSize: \"14px\" }}>{resume.descriptionProfile}</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p className=\"head-1\">EXPERIENCE</p>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tresume.experiences && resume.experiences.map(element => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<p>{element.nameCompany} ({dateFormat(element.startDate, 'mm/yyyy')} - {dateFormat(element.endDate, 'mm/yyyy')})</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"p-4-1\">{element.descriptionExperience}</p>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<p className=\"head-1\">Education</p>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tresume.educations && resume.educations.map(element => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<p>{element.nameSchool} ({dateFormat(element.startDate, 'mm/yyyy')} - {dateFormat(element.endDate, 'mm/yyyy')})</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"p-4-1\">{element.descriptionEducation}</p>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"clearfix-1\"></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t<button className=\"btn btn-primary mr-2\">Accept Resume</button>\r\n\t\t\t\t<button className=\"btn btn-primary mr-2\">Refuse Resume</button>\r\n\t\t\t\t<Pdf targetRef={ref} filename=\"post.pdf\">\r\n\t\t\t\t\t{({ toPdf }) => <button className=\"btn btn-primary\" onClick={toPdf}>Download file PDF</button>}\r\n\t\t\t\t</Pdf>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ReviewResume\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\companydetail\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\appliedjobs\\[id].js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\pages\\account\\[id].js",["830"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport Info from '../../components/account/Info'\r\nimport { getProfileUsers } from '../../redux/actions/profileAction'\r\n\r\n\r\nconst Account = () => {\r\n    const { profile, auth } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        if (profile.ids.every(item => item !== id)) {\r\n            dispatch(getProfileUsers({ id, auth }))\r\n        }\r\n    }, [id, auth, dispatch, profile.ids])\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n\r\n            <Info auth={auth} profile={profile} dispatch={dispatch} id={id} />\r\n\r\n            {/* {\r\n                auth.user._id === id &&\r\n                <div className=\"profile_tab\">\r\n                    <button className={saveTab ? '' : 'active'} onClick={() => setSaveTab(false)}>Posts</button>\r\n                    <button className={saveTab ? 'active' : ''} onClick={() => setSaveTab(true)}>Saved</button>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                profile.loading \r\n                ? <img className=\"d-block mx-auto\" src={LoadIcon} alt=\"loading\" />\r\n                : <>\r\n                    {\r\n                        saveTab\r\n                        ? <Saved auth={auth} dispatch={dispatch} />\r\n                        : <Posts auth={auth} profile={profile} dispatch={dispatch} id={id} />\r\n                    }\r\n                </>\r\n            } */}\r\n            {/* <Setting /> */}\r\n            {/* <EditAccount/>.\r\n             */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\alertReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\redux\\reducers\\authReducer.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createjob\\CreateJob.js",["831","832","833","834","835","836","837","838","839","840","841"],"import Autocomplete from '@mui/material/Autocomplete'\r\nimport TextField from '@mui/material/TextField'\r\nimport dateFormat from 'dateformat'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import { GLOBALTYPES } from '../../redux/actions/globalTypes'\r\nimport { createJob } from '../../redux/actions/listJobAction'\r\n// import { checkImage } from '../../utils/imageUpload'\r\nimport './CreateJob.scss'\r\n\r\n\r\nimport AddSkill from './AddSkill'\r\n\r\n\r\nlet arrSkill = []\r\nconst CreateJob = () => {\r\n\r\n    const dataLevel = [\r\n        \"Interns\",\r\n        \"Fresher\",\r\n        \"Experienced\",\r\n    ]\r\n    const dataTypeJob = [\r\n        \"Full-time\",\r\n        \"Part-time\",\r\n        \"Internship\",\r\n        \"Freelancer\",\r\n        \"Seasonal\",\r\n        \"Other\"\r\n    ]\r\n    const dataSize = [\r\n        \"10-\",\r\n        \"10-24\",\r\n        \"25-99\",\r\n        \"100-499\",\r\n        \"500-999\",\r\n        \"1000-4999\"\r\n    ]\r\n\r\n\r\n\r\n    const { auth, listCompany, socket } = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n    const [level, setLevel] = useState('Interns')\r\n    const [jobType, setJobType] = useState('Full-time')\r\n    const [companySize, setSize] = useState('10-')\r\n    const initState = {\r\n        companyName: '', position: '', industry: '', address: '', description: '', requirement: '', minSalary: 0,\r\n        maxSalary: 0, companySize: '', infoCompany: '', benefit: '', endDate: ''\r\n    }\r\n    const [jobData, setJobData] = useState(initState)\r\n\r\n    const [skill, setSkill] = useState([])\r\n    const [logo, setLogo] = useState('')\r\n    const [image, setImage] = useState('')\r\n\r\n    const [load, setLoad] = useState([1])\r\n\r\n    const handleDeleteSkill = (i) => {\r\n        arrSkill.splice(i, 1)\r\n        load.splice(i, 1)\r\n        let tmp = [...load]\r\n        setLoad(tmp)\r\n    }\r\n\r\n    const handleInput = e => {\r\n        const { name, value } = e.target\r\n        setJobData({ ...jobData, [name]: value })\r\n    }\r\n\r\n\r\n    const handleCreate = () => {\r\n        dispatch(createJob(jobData, level, jobType, arrSkill, companySize, logo, image, auth, socket))\r\n        console.log('arrSkill', arrSkill)\r\n    }\r\n    const onTagsChangeSkill = (e, value) => {\r\n        setSkill([value])\r\n        console.log(skill)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let company = {}\r\n        let date = new Date()\r\n        if (listCompany.companies) {\r\n            listCompany.companies.map(element => {\r\n                if (element.idCompany === auth.user._id)\r\n                    company = { ...element }\r\n            })\r\n        }\r\n        // setCompanyData(company)\r\n\r\n        setJobData({ ...jobData, ['endDate']: dateFormat(date, 'yyyy-mm-dd'), ['companyName']: company.companyName, ['infoCompany']: company.info, ['companySize']: company.companySize })\r\n\r\n    }, [])\r\n    return (\r\n\r\n        <div className=\"create-job\" >\r\n            <div className=\"create-cv-header\">\r\n                <h2 className=\"text-center text-2\">Post Job</h2>\r\n            </div>\r\n            <div className=\"container-create-job\">\r\n                <div className=\"profile-account card\">\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"text-center mb-4\">The Job</h4>\r\n                        <form>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Job Title</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <input type=\"\" className=\"form-control\" id=\"position\" name='position' onChange={handleInput} placeholder=\"Eg. Senior UX Designer\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Job Level</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <select className=\"form-control\" id=\"\" placeholder=\"\" name='level' defaultValue='Interns' onChange={e => setLevel(e.target.value)}>\r\n                                        {\r\n                                            dataLevel.map((element) => (\r\n                                                <option value={element}>{element}</option>\r\n                                            ))\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Job Type</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <select className=\"form-control\" id=\"\" placeholder=\"\" defaultValue='Full-time' name='jobType' onChange={e => setJobType(e.target.value)}>\r\n                                        {\r\n                                            dataTypeJob.map((element) => (\r\n                                                <option value={element}>{element}</option>\r\n                                            ))\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\" >Job Category</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <input type=\"\" className=\"form-control\" id=\"\" placeholder=\"Nhập ngành nghề\" name='industry' onChange={handleInput} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Working Location</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <input type=\"\" name='address' onChange={handleInput} className=\"form-control\" id=\"\" placeholder=\"123 Đà Nẵng\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Description</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <textarea className=\"form-control\" name='description' onChange={handleInput} placeholder=\"Nhập mô tả công việc\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Requirements</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <textarea className=\"form-control\" name='requirement' onChange={handleInput} placeholder=\"Nhập yêu cầu công việc\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Skill Tags</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    {\r\n                                        load.map((data, index) => (\r\n                                            <AddSkill index={index} load={load} handleDeleteSkill={handleDeleteSkill} arr={arrSkill} />\r\n                                        ))\r\n                                    }\r\n                                    <button type=\"button\" onClick={e => setLoad([...load, 1])} class=\"btn btn-primary btn-save\">Add skill</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Salary Range</label>\r\n                                <div className=\"col-sm-4\">\r\n                                    <input type=\"\" name='minSalary' onChange={handleInput} className=\"form-control\" id=\"\" placeholder=\"Ví dụ: 2000000\" />\r\n                                </div>\r\n                                <div className=\"col-sm-4\">\r\n                                    <input type=\"\" name='maxSalary' onChange={handleInput} className=\"form-control\" id=\"\" placeholder=\"Ví dụ: 5000000\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Benefits</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <input type=\"\" className=\"form-control\" name='benefit' onChange={handleInput} id=\"\" placeholder=\"Ví dụ: Lương tháng 13\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Date-end</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <input type=\"date\" className=\"form-control\" value={jobData.endDate} name='endDate' onChange={handleInput} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <hr />\r\n                        <h4 className=\"text-center mb-4\">Your Company</h4>\r\n                        <form>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Company Name</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <input type=\"\" name='companyName' onChange={handleInput} defaultValue={jobData.companyName} className=\"form-control\" id=\"\" placeholder=\"Ví dụ: RankWorks\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Company Size</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <select className=\"form-control\" id=\"\" name='companySize' defaultValue={jobData.companySize} onChange={(e) => setSize(e.target.value)} placeholder=\"\">\r\n\r\n                                        {\r\n                                            dataSize.map((element) => (\r\n                                                <option value={element}>{element}</option>\r\n                                            ))\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Địa Chỉ Công Ty</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <input type=\"\" className=\"form-control\" id=\"\" placeholder=\"Ví dụ: 123 Đà Nẵng\" />\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Company Profile</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <textarea className=\"form-control\" name='infoCompany' defaultValue={jobData.infoCompany} onChange={handleInput} placeholder=\"Thông tin công ty...\"></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Company Logo</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <input type=\"file\" class=\"form-control\" accept=\"image/*\" onChange={changeLogo} aria-label=\"Upload\" />\r\n                                </div>\r\n                            </div> */}\r\n                            {/* <div className=\"row mb-3\">\r\n                                <label for=\"\" className=\"col-sm-3 col-form-label\">Company Photos</label>\r\n                                <div className=\"col-sm-8\">\r\n                                    <input type=\"file\" onChange={changeImage} accept=\"image/*\" class=\"form-control\" aria-describedby=\"inputGroupFileAddon04\" aria-label=\"Upload\" />\r\n                                </div>\r\n                            </div> */}\r\n                        </form>\r\n                        <div className=\"text-center\">\r\n                            <button type=\"\" onClick={handleCreate} class=\"btn btn-primary btn-save\">Post Job</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default CreateJob\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\managejob\\ManageJob.js",["842","843"],"import { DataGrid } from \"@material-ui/data-grid\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport TimelineIcon from '@mui/icons-material/Timeline';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteJob } from '../../redux/actions/listJobAction';\r\nimport './ManageJob.scss';\r\nimport { AddToQueue } from '@mui/icons-material';\r\nimport dateFormat from 'dateformat'\r\n\r\n\r\nconst ManageJobs = () => {\r\n\r\n    const columns = [\r\n        {\r\n            field: '_id',\r\n            headerName: 'ID',\r\n            width: 100\r\n        },\r\n        {\r\n            field: 'position',\r\n            headerName: 'Job Title',\r\n            width: 150,\r\n\r\n        },\r\n        {\r\n            field: 'industry',\r\n            headerName: 'Industry',\r\n            width: 150,\r\n\r\n        },\r\n        {\r\n            field: 'status',\r\n            headerName: 'Status',\r\n            width: 150,\r\n\r\n        },\r\n        {\r\n            field: 'createdAt',\r\n            headerName: 'Date created',\r\n            width: 150,\r\n            type: 'date',\r\n            valueFormatter: (params) => { return dateFormat(params.value, 'dd/mm/yyyy') }\r\n        },\r\n        {\r\n            field: 'endDate',\r\n            headerName: 'Expried on',\r\n            width: 150,\r\n            type: 'date',\r\n            valueFormatter: (params) => { return dateFormat(params.value, 'dd/mm/yyyy') }\r\n        },\r\n        {\r\n            field: \"action\",\r\n            headerName: \"Action\",\r\n            width: 120,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <>\r\n                        <Link to={\"/analysis/\" + params.row._id}>\r\n                            <TimelineIcon titleAccess=\"Analysis\" />\r\n                        </Link>\r\n                        <Link to={\"/edit-job/\" + params.row._id}>\r\n                            <EditIcon titleAccess=\"Edit\" />\r\n                        </Link>\r\n                        <DeleteOutline titleAccess=\"Delete\" className=\"manage-job-delete\" onClick={e => handleDelete(params.row._id)} />\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    const { allJob, auth } = useSelector(state => state)\r\n    const [jobs, setJobs] = useState([])\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(deleteJob({ id, auth }))\r\n        // console.log(id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let arr = []\r\n        if (allJob.jobs) {\r\n            allJob.jobs.map((obj, index) => {\r\n                if (obj.idCompany === auth.user._id) {\r\n                    arr = [...arr, { id: index, ...obj }]\r\n                }\r\n            })\r\n        }\r\n        setJobs(arr)\r\n    }, [allJob.jobs])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"manage-job\" onLoad={window.scrollTo(0, 0)}>\r\n            <div className=\"manage-job-header\">\r\n                <h2 className=\"text-center text-2\">Manage Jobs</h2>\r\n            </div>\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"header-manage-job\">\r\n                        <div className=\"list-job-1\">\r\n                            <span>List Jobs</span>\r\n                        </div>\r\n                        <div className=\"btn-new-job\">\r\n                            <Link to='/newJob'>\r\n                                <button variant=\"outlined\" type=\"button\" className=\"btn btn-new-job-1\">\r\n                                    <AddToQueue /> Post Job\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"manage-job-container \">\r\n                        <DataGrid\r\n                            rows={jobs}\r\n                            component=\"div\"\r\n                            columns={columns}\r\n                            pageSize={5}\r\n                            rowsPerPageOptions={[5]}\r\n                            checkboxSelection\r\n                            disableSelectionOnClick\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManageJobs\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\analysisjob\\AnalysisJobs.js",["844","845","846","847","848"],"import { DataGrid } from \"@material-ui/data-grid\";\r\nimport { ArrowDownward, ArrowUpward } from \"@material-ui/icons\";\r\nimport ReadMoreIcon from '@mui/icons-material/ReadMore';\r\nimport dateFormat from 'dateformat';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { CartesianGrid, Line, LineChart, ResponsiveContainer, Tooltip, XAxis } from \"recharts\";\r\nimport { getListSubmitedForCompany, setStatus } from \"../../redux/actions/sumitedAction\";\r\nimport './AnalysisJobs.scss';\r\n\r\n\r\n//select\r\nimport FormControl from '@mui/material/FormControl';\r\nimport NativeSelect from '@mui/material/NativeSelect';\r\n\r\n\r\nconst AnalysisJobs = () => {\r\n\r\n\r\n    // const dispatch = useDispatch()\r\n\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 100 },\r\n        {\r\n            field: 'fullname',\r\n            headerName: 'Full name',\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'dateSubmit',\r\n            headerName: 'Apply on',\r\n            width: 150,\r\n            valueFormatter: (params) => { return dateFormat(params.value, 'dd/mm/yyyy') }\r\n\r\n        },\r\n        {\r\n            field: 'status',\r\n            headerName: 'Status',\r\n            width: 150,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <FormControl fullWidth sx={{ height: 20 }}>\r\n                        <NativeSelect\r\n                            defaultValue={params.row.status}\r\n                            onChange={e => handleOnChange(e, params.row.idCV, params.row.idCandidate)}\r\n                        // inputProps={{\r\n                        //     name: 'age',\r\n                        //     id: 'uncontrolled-native',\r\n                        // }}\r\n                        >\r\n                            <option value={'Waiting'}>Waiting</option>\r\n                            <option value={'Accept'}>Accept</option>\r\n                            <option value={'Refuse'}>Refuse</option>\r\n                        </NativeSelect>\r\n                    </FormControl>\r\n\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: 'Point',\r\n            headerName: 'Point',\r\n            width: 150,\r\n\r\n        },\r\n        {\r\n            field: 'action',\r\n            headerName: 'Action',\r\n            width: 120,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <>\r\n                        <Link to={\"/detailResume/\" + params.row.idCV} query={{ testvalue: \"hello\" }}>\r\n                            <ReadMoreIcon />\r\n                        </Link>\r\n                        {/* <Link to={\"/edit-job/\" + params.row._id}>\r\n                            <EditIcon titleAccess=\"Edit\" />\r\n                        </Link>\r\n                        <DeleteOutline titleAccess=\"Delete\" className=\"manage-job-delete\" onClick={e => handleDelete(params.row._id)} /> */}\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ]\r\n    const { id } = useParams()\r\n    const { allJob, submited, auth, socket } = useSelector(state => state)\r\n    const [jobs, setJobs] = useState([])\r\n    const [post, setPost] = useState({})\r\n    const [cvs, setCvs] = useState([])\r\n    const [totalCVToday, setCvToday] = useState(0)\r\n    const [totalCVYesterday, setCvYesterday] = useState(0)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getListSubmitedForCompany(id, auth))\r\n        if (allJob.jobs) {\r\n            allJob.jobs.map((element) => {\r\n                if (element._id === id) {\r\n                    setJobs({ ...element })\r\n                }\r\n            });\r\n        }\r\n\r\n    }, [dispatch, id])\r\n\r\n    useEffect(() => {\r\n        let arr = {}\r\n        let arr1 = []\r\n        if (submited.submited) {\r\n            arr = { ...submited.submited }\r\n        }\r\n        setPost(arr)\r\n        if (arr.cv) {\r\n            arr.cv.map((element, index) => {\r\n                arr1 = [...arr1, { ...element, 'id': index }]\r\n            })\r\n        }\r\n        setCvs([...arr1])\r\n        calTotalCVToday(arr1)\r\n        calTotalCVYesterday(arr1)\r\n    }, [submited.submited])\r\n\r\n    const calTotalCVToday = (cvs) => {\r\n        const arr = cvs.filter(element => dateFormat(element.dateSubmit, 'dd/mm/yyyy') === dateFormat(new Date(), 'dd/mm/yyyy'))\r\n        setCvToday(arr.length)\r\n    }\r\n    const calTotalCVYesterday = (cvs) => {\r\n        const arr = cvs.filter(element => dateFormat(element.dateSubmit, 'dd/mm/yyyy') === dateFormat(new Date(Date.now() - 864e5), 'dd/mm/yyyy'))\r\n        setCvYesterday(arr.length)\r\n    }\r\n\r\n    const handleOnChange = (e, idCV, idCandidate) => {\r\n        // console.log(e.target.value)\r\n        dispatch(setStatus(jobs._id, idCV, idCandidate, e.target.value, auth, socket))\r\n    }\r\n\r\n    return (\r\n        <div className=\"analysis-job-view\">\r\n            <h2 className=\"text-center text-2\">Analysis Job</h2>\r\n            <div className=\"container-analysis-job\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"job-title\">\r\n                            <span>Job Title: {jobs.position}</span>\r\n                        </div>\r\n                        <div className=\"job-day\">\r\n                            <span>Date created:</span> {dateFormat(jobs.createdAt, 'dd/mm/yyyy')}\r\n                        </div>\r\n                        <div className=\"job-day\">\r\n                            <span>Expires on:</span> {dateFormat(jobs.endDate, 'dd/mm/yyyy')}\r\n                        </div>\r\n                        <div className=\"job-day\">\r\n                            {/* <span>Status:</span> Active - Pending Approval - Closed */}\r\n                            <span>Status:</span> {new Date(jobs.endDate).getTime() < new Date().getTime() ? 'Closed' : 'Active'}\r\n                        </div>\r\n                        <div className=\"job-day\">\r\n                            <span>Total Resume:</span> {cvs.length}\r\n                        </div>\r\n                        <div className=\"featured\">\r\n                            <div className=\"featuredItem\">\r\n                                <span className=\"featuredTitle\">Total Resume</span>\r\n                                <div className=\"featuredMoneyContainer\">\r\n                                    <span className=\"featuredMoney\">{totalCVToday}</span>\r\n                                    <span className=\"featuredMoneyRate\">\r\n                                        {totalCVToday - totalCVYesterday} {totalCVToday - totalCVYesterday > 0 ? <ArrowUpward className=\"featuredIcon negative\" style={{ color: \"green\" }} /> : <ArrowDownward className=\"featuredIcon negative\" />}\r\n                                    </span>\r\n                                </div>\r\n                                <span className=\"featuredSub\">Compared to last day</span>\r\n                            </div>\r\n                            <div className=\"featuredItem\">\r\n                                <span className=\"featuredTitle\">View</span>\r\n                                <div className=\"featuredMoneyContainer\">\r\n                                    <span className=\"featuredMoney\">{jobs.jobFollower ? jobs.jobFollower.length : 0}</span>\r\n                                    {/* <span className=\"featuredMoneyRate\">\r\n                                        -1 <ArrowDownward className=\"featuredIcon negative\" />\r\n                                    </span> */}\r\n                                </div>\r\n                                <span className=\"featuredSub\">Compared to last day</span>\r\n                            </div>\r\n                            <div className=\"featuredItem\">\r\n                                <span className=\"featuredTitle\">Selected resume</span>\r\n                                <div className=\"featuredMoneyContainer\">\r\n                                    <span className=\"featuredMoney\">{cvs.filter(element => element.status === 'Accept').length}</span>\r\n                                    {/* <span className=\"featuredMoneyRate\">\r\n                                        <ArrowDownward className=\"featuredIcon negative\" />\r\n                                    </span> */}\r\n                                </div>\r\n                                {/* <span className=\"featuredSub\">Compared to last day</span> */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"chart\">\r\n                            <h3 className=\"chartTitle\"></h3>\r\n                            <ResponsiveContainer width=\"100%\" aspect={4 / 1}>\r\n                                <LineChart data=\"\">\r\n                                    <XAxis dataKey=\"name\" stroke=\"#5550bd\" />\r\n                                    <Line type=\"monotone\" dataKey=\"\" stroke=\"#5550bd\" />\r\n                                    <Tooltip />\r\n                                    <CartesianGrid stroke=\"#e0dfdf\" strokeDasharray=\"5 5\" />\r\n                                </LineChart>\r\n                            </ResponsiveContainer>\r\n\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"list-candidates\">\r\n                                    <span>List Candidates</span>\r\n                                </div>\r\n                                <div className=\"datagrid-table\">\r\n                                    <DataGrid\r\n                                        component=\"div\"\r\n                                        pageSize={5}\r\n                                        rows={cvs}\r\n                                        columns={columns}\r\n                                        rowsPerPageOptions={[5]}\r\n                                        checkboxSelection\r\n                                        disableSelectionOnClick\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnalysisJobs\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\Posts.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\Status.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\LoadMoreBtn.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\home\\RightSideBar.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\PostThumb.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\chart\\Chart.jsx",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\featuredInfo\\FeaturedInfo.jsx",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\jobsdetail\\JobsDetail.js",["849","850"],"import dateFormat from 'dateformat'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport FollowCompanyBtn from '../FollowJobBtn'\r\nimport SearchJob from '../jobs/SearchJob'\r\nimport SubmitCVModal from '../submitcvmodal/SubmitCVModal'\r\nimport './JobsDetail.scss'\r\n\r\n\r\nconst JobsDetail = () => {\r\n\r\n\r\n    const { id } = useParams()\r\n    const [job, setJob] = useState({})\r\n    const [ShowSubmitCV, setShowSubmitCV] = useState(false)\r\n\r\n    const { allJob, auth, socket } = useSelector(state => state)\r\n\r\n    const jobs = allJob.jobs ? allJob.jobs : allJob.searchJob ? allJob.searchJob : []\r\n\r\n    const checkId = (id) => {\r\n        jobs.forEach(element => {\r\n            if (element._id === id) {\r\n                setJob({ ...element })\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkId(id)\r\n        console.log(job)\r\n    }, [id, auth.token, allJob])\r\n\r\n\r\n    return (\r\n        <div className=\"job-detail-view mb-5\" onLoad={window.scrollTo(0, 0)}>\r\n            <SearchJob />\r\n            <div className=\"container\">\r\n                <div className=\"mt-3 text-1\">\r\n                    <Link to='/'>Home</Link><span> / </span><Link to='/jobs'>Jobs</Link><span> / {job.position}</span>\r\n                </div>\r\n                <div className=\"card mt-3 job-content\">\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\">{job.position}</h3>\r\n                        <div className=\"name-company mb-2\">\r\n                            <Link title={job.companyName} to={`/companydetail/${job.idCompany}`}>{job.companyName}</Link>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-8\">\r\n                                <div className=\"card job-content-2\">\r\n                                    <div className=\"card-body row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"content-detail\">\r\n                                                <div className=\"icon-left\">\r\n                                                    <i className=\"fas fa-dollar-sign\"></i>\r\n                                                </div>\r\n                                                <div className=\"info-detail\">\r\n                                                    <span className=\"title-3\">Salary:</span>\r\n                                                    <span>{job.minSalary / 1000000}-{job.maxSalary / 1000000} Triệu</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <div className=\"content-detail\">\r\n                                                <div className=\"icon-left\">\r\n                                                    <i className=\"fas fa-map-marker-alt\"></i>\r\n                                                </div>\r\n                                                <div className=\"info-detail\">\r\n                                                    <span className=\"title-3\">Location:</span>\r\n                                                    <span>{job.address}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <div className=\"content-detail\">\r\n                                                <div className=\"icon-left\">\r\n                                                    <i className=\"fas fa-user\"></i>\r\n                                                </div>\r\n                                                <div className=\"info-detail\">\r\n                                                    <span className=\"title-3\">Level:</span>\r\n                                                    <span>{job.level}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <div className=\"content-detail\">\r\n                                                <div className=\"icon-left\">\r\n                                                    <i className=\"far fa-id-card\"></i>\r\n                                                </div>\r\n                                                <div className=\"info-detail\">\r\n                                                    <span className=\"title-3\">Job type:</span>\r\n                                                    <span>{job.jobType}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"content-detail\">\r\n                                                <div className=\"icon-left\">\r\n                                                    <i className=\"fas fa-bars\"></i>\r\n                                                </div>\r\n                                                <div className=\"info-detail\">\r\n                                                    <span className=\"title-3\">Job Category:</span>\r\n                                                    <span>{job.industry}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <div className=\"content-detail\">\r\n                                                <div className=\"icon-left\">\r\n                                                    <i className=\"fas fa-briefcase\"></i>\r\n                                                </div>\r\n                                                <div className=\"info-detail\">\r\n                                                    <span className=\"title-3\">Exp requirements:</span>\r\n                                                    <span>2 năm</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <div className=\"content-detail\">\r\n                                                <div className=\"icon-left\">\r\n                                                    <i className=\"far fa-clock\"></i>\r\n                                                </div>\r\n                                                <div className=\"info-detail\">\r\n                                                    <span className=\"title-3\">Date created:</span>\r\n                                                    <span>{dateFormat(job.createdAt, 'dd/mm/yyyy')}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <div className=\"content-detail\">\r\n                                                <div className=\"icon-left\">\r\n                                                    <i className=\"far fa-clock\"></i>\r\n                                                </div>\r\n                                                <div className=\"info-detail\">\r\n                                                    <span className=\"title-3\">Expires on:</span>\r\n                                                    <span>{dateFormat(job.endDate, 'dd/mm/yyyy')}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                {auth.isCompany ?\r\n                                    <div className=\"job-btn\">\r\n                                        <button type=\"button\" className=\"btn btn-info btn-lg\" onClick={() => setShowSubmitCV(true)} disabled={true}><i className=\"far fa-paper-plane\"></i> APPLY NOW</button>\r\n                                        {\r\n                                            ShowSubmitCV &&\r\n                                            <SubmitCVModal\r\n                                                setShowSubmitCV={setShowSubmitCV}\r\n                                                job={job} />\r\n                                        }\r\n                                        <FollowCompanyBtn job={job} />\r\n                                        <button type=\"button\" disabled={true} className=\"btn btn-secondary btn-lg mt-3\" ><i className=\"fas fa-share-alt\" ></i> Share Job</button>\r\n                                    </div> :\r\n                                    <div className=\"job-btn\">\r\n                                        <button type=\"button\" className=\"btn btn-info btn-lg\" onClick={() => setShowSubmitCV(true)}><i className=\"far fa-paper-plane\"></i> APPLY NOW</button>\r\n                                        {\r\n                                            ShowSubmitCV &&\r\n                                            <SubmitCVModal\r\n                                                setShowSubmitCV={setShowSubmitCV}\r\n                                                job={job} />\r\n                                        }\r\n                                        <FollowCompanyBtn job={job} />\r\n                                        <button type=\"button\" className=\"btn btn-secondary btn-lg mt-3\"><i className=\"fas fa-share-alt\"></i> Share Job</button>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"job-desription\">\r\n                            <h5 className=\"mt-3 text-uppercase\">Job Description</h5>\r\n                            <div className=\"job-desription-content\">\r\n                                <span>\r\n                                    {/* 1/ CÔNG TÁC QUẢN LÝ CHUNG <br />\r\n                                    - Quản lý, điều hành toàn bộ hoạt động của Phòng trong lĩnh vực kinh doanh;<br />\r\n                                    - Xây dựng, trình duyệt và triển khai thực hiện kế hoạch kinh doanh hàng tháng, quý, năm của công ty;<br />\r\n                                    - Tham gia xây dựng hệ thống quản trị nhân sự, xây dựng hệ thống quy trình theo quy định của công ty<br />\r\n                                    - Tổ chức, triển khai và giám sát nhân viên thực hiện kế hoạch kinh doanh; theo dõi;<br />\r\n                                    - Tổ chức và quản lý hệ thống dữ liệu Khách hàng của Công ty;<br />\r\n                                    - Báo cáo kết quả doanh hàng tháng hoặc khi có yêu cầu;<br />\r\n                                    - Hàng tháng, hàng quý, đánh giá hiệu quả công việc của phòng Kinh doanh gửi cho Giám đốc;<br />\r\n                                    - Lên kế hoạch đào tạo, tuyển dụng Nhân sự & ngân sách dự trù cho các hoạt động của Phòng;<br />\r\n                                    - Phối hợp với Phòng Marketing triển khai kế hoạch MKT nhằm phục vụ hoạt động bán hàng */}\r\n                                    {\r\n                                        job.description\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"job-requirements\">\r\n                            <h5 className=\"mt-3 text-uppercase\">JOB REQUIREMENTS</h5>\r\n                            <div className=\"job-requirements-content\">\r\n                                <span>\r\n                                    {/* 1. Yêu cầu sử dụng thành thạo các phần mềm thiết kế Autocad<br />\r\n                                    2. Có kinh nghiệm làm QS 1 năm trở lên<br />\r\n                                    3. Tỷ mỷ, cẩn thận<br />\r\n                                    4. Có tinh thần học hỏi và cầu tiến<br />\r\n                                    5. Có thể làm tăng ca<br />\r\n                                    6. Có mong muốn gắn bó lâu dài với công ty */}\r\n                                    {job.requirement}\r\n                                    <br />\r\n                                    <h5 className=\"mt-3 text-uppercase\">Skill</h5>\r\n                                    {job.skill && job.skill.map(element => (\r\n                                        <span>-{element.title}<br /></span>\r\n                                    ))}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"job-req-doc\">\r\n                            <h5 className=\"mt-3 text-uppercase\">Rusume Requirements</h5>\r\n                            <div className=\"job-req-doc-content\">\r\n                                <span>\r\n                                    - Đơn xin việc <br />\r\n                                    - Sơ yếu lý lịch <br />\r\n                                    - Hộ khẩu, chứng minh nhân dân <br />\r\n                                    - Giấy khám sức khỏe (có thể bổ sung khi trúng tuyển)\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"job-benefits\">\r\n                            <h5 className=\"mt-3 text-uppercase\">BENEFITS</h5>\r\n                            <div className=\"job-benefits-content\">\r\n                                <span>\r\n                                    {/* - Lương thỏa thuận từ 12-15 triệu. <br />\r\n                                    - Làm việc từ thứ 2 đến thứ 7 hàng tuần giờ hành chính.<br />\r\n                                    - Đóng bảo hiểm theo quy định nhà nước.<br />\r\n                                    - Chế độ lương thưởng, hiếu, hỉ, sinh nhật , thưởng hoàn thành công việc. */}\r\n                                    {job.benefit}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"job-contact-info\">\r\n                            <h5 className=\"mt-3 text-uppercase\">CONTACT INFO</h5>\r\n                            <div className=\"job-req-doc-content\">\r\n                                <span>\r\n                                    Người liên hệ: Ms. Thanh <br />\r\n                                    Địa chỉ công ty: Tầng 5, Số 68 Trần Thái Tông, Dịch Vọng Hậu, Cầu Giấy, Hà Nội<br />\r\n                                    Hạn nộp hồ sơ: {dateFormat(job.endDate, 'dd/mm/yyyy')}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobsDetail\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\appliedjob\\AppliedJob.js",["851","852","853","854","855"],"import dateFormat from 'dateformat'\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport './AppliedJob.scss'\r\nimport { unSubmit, getListSubmited } from '../../redux/actions/sumitedAction'\r\n\r\nconst AppliedJob = () => {\r\n\r\n    const { allJob, submited, auth } = useSelector(state => state)\r\n    const [dataJob, setDataJob] = useState([])\r\n    const [dataSubmited, setDataSubmited] = useState([])\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (idJob) => {\r\n        dispatch(unSubmit(idJob, auth))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getListSubmited(auth))\r\n        const jobs = allJob.jobs ? allJob.jobs : []\r\n        const jobSubmited = submited.submited ? submited.submited : []\r\n        let arr = []\r\n        jobs.filter(dataJob => {\r\n            jobSubmited.map(dataCv => {\r\n                if (dataJob._id === dataCv.idJob) {\r\n                    let tmp = { ...dataJob }\r\n                    dataCv.cv.map(element => {\r\n                        if (element.idCandidate === auth.user._id)\r\n                            tmp = { ...tmp, \"status\": element.status, 'dateSubmit': element.dateSubmit }\r\n                    })\r\n                    arr = [...arr, tmp]\r\n                }\r\n            })\r\n        })\r\n        setDataJob([...arr])\r\n        setDataSubmited(submited.submited)\r\n    }, [submited])\r\n\r\n    return (\r\n        <div className=\"applied-job-view container\" onLoad={window.scrollTo(0, 0)}>\r\n            <h3 className=\"text-center mt-3\">Manage Applied Jobs</h3>\r\n            <div className=\"applied-job-content card mt-3\">\r\n                <div className=\"card-body\">\r\n                    {\r\n                        dataJob.map(element => (\r\n                            <div className=\"applied-job-list\">\r\n                                <div className=\"list-jobs\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-9\">\r\n                                            <div className=\"name-job\">\r\n                                                <Link><span>{element.position}</span></Link>\r\n                                            </div>\r\n                                            <div className=\"name-company\">\r\n                                                <Link><span >{element.companyName}</span></Link>\r\n                                            </div>\r\n\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-4\">\r\n                                                    <span className=\"font-weight-bold\">Status: </span><span style={{ color: 'green' }}>{element.status}</span>\r\n                                                </div>\r\n                                                <div className=\"col-sm-4\">\r\n                                                    <span className=\"font-weight-bold\">Applied on: </span><span>{dateFormat(element.dateSubmit, 'dd/mm/yyyy')}</span>\r\n                                                </div>\r\n                                                <div className=\"col-sm-4\">\r\n                                                    <span className=\"font-weight-bold text-danger\">Expired: </span><span> {dateFormat(element.endDate, 'dd/mm/yyyy')}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-3\">\r\n                                            <div className=\"btn-applied-job mt-3\">\r\n                                                <button type=\"button\" className=\"btn btn-applied-job-1\" onClick={e => handleDelete(element._id)}><i className=\"far fa-trash-alt\"></i> Delete</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppliedJob\r\n","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\companysdetail\\CompanysDetail.js",["856","857"],"import React, { useEffect, useState } from 'react'\r\nimport './CompanysDetail.scss'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport FollowCompanyBtn from '../FollowCompanyBtn'\r\nimport dateFormat from 'dateformat';\r\nimport BtnSaveJob from './BtnSaveJob'\r\nimport ShareModal from '../ShareModal'\r\nimport { BASE_URL } from '../../utils/config'\r\n\r\n\r\nimport logo from '../../images/LogoFPT.png'\r\n\r\nconst CompanysDetails = () => {\r\n\r\n    const { id } = useParams()\r\n    const [company, setCompany] = useState({})\r\n    const [typeShare, setTypeShare] = useState(false)\r\n\r\n    const { listCompany, auth, allJob } = useSelector(state => state)\r\n\r\n    const companies = listCompany.companies ? listCompany.companies : []\r\n    const [jobs, setJobs] = useState([])\r\n\r\n    const checkId = (id) => {\r\n        companies.forEach(element => {\r\n            if (element.idCompany === id) {\r\n                setCompany({ ...element })\r\n            }\r\n        });\r\n    }\r\n\r\n    const checkJob = () => {\r\n        if (allJob.jobs) {\r\n            const tmp = allJob.jobs.filter(element => element.idCompany === id)\r\n            setJobs([...tmp])\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkId(id)\r\n        checkJob()\r\n\r\n    }, [id, auth.token, listCompany, allJob])\r\n\r\n    //follow\r\n\r\n\r\n    return (\r\n        <div className=\"company-detail-view mb-5\" onLoad={window.scrollTo(0, 0)}>\r\n            <div className=\"container\">\r\n                <div className=\"mt-3 text-1\">\r\n                    <Link to='/'>Home</Link><span> / </span><Link to='/companys'>Company</Link><span> / {company.companyName}</span>\r\n                </div>\r\n                <div className=\"company-detail-content mt-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2 logo-company text-center\">\r\n                            <img src={company.logo} alt=\"logo-company\" />\r\n                        </div>\r\n                        <div className=\"col-sm-7 info-company\">\r\n                            <h4 className=\"name-company\">{company.companyName}</h4>\r\n                            <p className=\"location-company\"><i className=\"fas fa-map-marker-alt\"></i> Address: {company.address}</p>\r\n                            <p className=\"web-company\"><i className=\"fas fa-globe\"></i> Website: {company.website}</p>\r\n                            <p className=\"info-detail\">{company.info}</p>\r\n                        </div>\r\n                        <div className=\"col-sm-3 btn-1 text-center\">\r\n                            <FollowCompanyBtn company={company} />\r\n                            <button type=\"button\" className=\"btn btn btn-light-1 mt-3\" onClick={() => setTypeShare(!typeShare)}><i className=\"fas fa-share-alt\"></i> Share Company</button>\r\n                            <div className=\"item-share\" style={{ display: `${typeShare ? 'block' : 'none'}` }}>\r\n                                <ShareModal url={`${BASE_URL}/companydetail/${company.idCompany}`} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"vacancie-recruiting mt-3\">\r\n                    <h2 className=\"text-center\">Related jobs</h2>\r\n                    <div className=\"container\">\r\n                        <div className=\"card\">\r\n                            <ul className=\"card-body\">\r\n                                <h3 className=\"card-title\">Found <span>{jobs.length}</span> jobs for this company</h3>\r\n                                {\r\n                                    jobs.map((element) => (\r\n                                        <>\r\n                                            <li className=\"content-vacancie-recruiting row mt-3\">\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <Link to={`/jobdetail/${element._id}`}><span title={element.position} className=\"card-title\">{element.position}</span></Link>\r\n                                                    <div className=\"job-info row\">\r\n                                                        <div className=\"col-sm-4 salary\">\r\n                                                            <i className=\"fas fa-dollar-sign\"></i><span> Salary: {element.minSalary / 1000000}-{element.maxSalary / 1000000} Triệu</span>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-4 location\">\r\n                                                            <i className=\"fas fa-map-marker-alt\"></i><span title={element.address}> Location: {element.address}</span>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-4 end-date\">\r\n                                                            <i className=\"far fa-clock\"></i><span title={dateFormat(element.endDate, 'dd/mm/yyyy')}> Deadline: {dateFormat(element.endDate, 'dd/mm/yyyy')}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <BtnSaveJob job={element} />\r\n                                            </li>\r\n                                            <hr />\r\n                                        </>\r\n\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanysDetails","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\account\\Info.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\account\\Followers.js",[],["858","859"],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\FollowCompanyBtn.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\companysdetail\\BtnSaveJob.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\account\\Following.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\account\\EditProfile.js",[],"C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createjob\\AddSkill.js",["860"],"import React, { useEffect, useState } from 'react';\r\nimport NativeSelect from '@mui/material/NativeSelect';\r\nimport './CreateJob.scss'\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst topSkill = [\r\n    { title: 'JavaScript' },\r\n    { title: 'Problem-Solving Skills' },\r\n    { title: 'Planning and Organizational Skills' },\r\n    { title: 'Data Analysis' },\r\n    { title: 'Adaptability' },\r\n    { title: 'ReactJs' },\r\n    { title: 'VueJs' },\r\n    { title: 'Sql Server' },\r\n    { title: \"Other\" }\r\n];\r\n\r\nconst level = [\r\n    { level: 'basic', point: '1' },\r\n    { level: 'intermediate', point: '3' },\r\n    { level: 'competently', point: '5' },\r\n];\r\n\r\nconst AddSkill = ({ index, load, handleDeleteSkill, arr }) => {\r\n\r\n    const initState = {\r\n        title: 'JavaScript',\r\n        point: '1'\r\n    }\r\n    const [data, setData] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (!data) {\r\n            arr[index] = initState\r\n            setData(initState)\r\n            console.log('arr', arr)\r\n        }\r\n    }, [load])\r\n\r\n\r\n\r\n\r\n    const handleInput = (event) => {\r\n        arr[index] = { ...data, 'point': event.target.value }\r\n        setData({ ...data, 'point': event.target.value })\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // if (!arrSkill[0]) {\r\n    //     //     arrSkill[0] = { 'skill': topSkill[0].title, 'level': level[0] }\r\n    //     // }\r\n    //     console.log(load)\r\n    // }, [])\r\n    return (\r\n\r\n        <div>\r\n            <Autocomplete\r\n                value={data}\r\n                onChange={(event, newValue) => {\r\n                    if (typeof newValue === 'string') {\r\n                        arr[index] = {\r\n                            ...data,\r\n                            title: newValue,\r\n                        }\r\n                        setData({\r\n                            ...data,\r\n                            title: newValue,\r\n                        });\r\n                    } else if (newValue && newValue.inputValue) {\r\n                        // Create a new value from the user input\r\n                        arr[index] = {\r\n                            ...data,\r\n                            title: newValue.inputValue,\r\n                        }\r\n                        setData({\r\n                            ...data,\r\n                            title: newValue.inputValue,\r\n                        });\r\n                    } else {\r\n                        arr[index] = { ...arr[index], 'title': newValue.title ? '' : newValue.title }\r\n                        setData(newValue);\r\n                    }\r\n                }}\r\n\r\n                filterOptions={(options, params) => {\r\n                    const filtered = filter(options, params);\r\n\r\n                    const { inputValue } = params;\r\n                    // Suggest the creation of a new value\r\n                    const isExisting = options.some((option) => inputValue === option.title);\r\n                    if (inputValue !== '' && !isExisting) {\r\n                        filtered.push({\r\n                            inputValue,\r\n                            title: `Add \"${inputValue}\"`,\r\n                        });\r\n                    }\r\n\r\n                    return filtered;\r\n                }}\r\n                selectOnFocus\r\n                clearOnBlur\r\n                handleHomeEndKeys\r\n                id=\"free-solo-with-text-demo\"\r\n                options={topSkill}\r\n                getOptionLabel={(option) => {\r\n                    // Value selected with enter, right from the input\r\n                    if (typeof option === 'string') {\r\n                        return option;\r\n                    }\r\n                    // Add \"xxx\" option created dynamically\r\n                    if (option.inputValue) {\r\n                        return option.inputValue;\r\n                    }\r\n                    // Regular option\r\n                    return option.title;\r\n                }}\r\n                renderOption={(props, option) => <li {...props}>{option.title}</li>}\r\n                sx={{ width: 300 }}\r\n                freeSolo\r\n                renderInput={(params) => (\r\n                    <TextField {...params} label=\"Free solo with text demo\" />\r\n                )}\r\n            />\r\n\r\n            {/* &emsp; */}\r\n            <NativeSelect id=\"select\"\r\n                onChange={handleInput}\r\n            >\r\n                {\r\n                    level.map(element => (\r\n                        <option value={element.point}>{element.level}</option>\r\n                    ))\r\n                }\r\n            </NativeSelect>\r\n            &emsp;\r\n            {index > 0 && <button type=\"button\" onClick={e => handleDeleteSkill(index)} class=\"btn btn-primary btn-save\">Delete</button>}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default AddSkill;","C:\\Users\\84832\\Desktop\\ProjectCapton\\EndGame\\client\\src\\components\\createcv\\AddSkill.js",["861"],"import React, { useEffect, useState } from 'react';\r\nimport NativeSelect from '@mui/material/NativeSelect';\r\nimport '../createjob/CreateJob.scss'\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst topSkill = [\r\n    { title: 'JavaScript' },\r\n    { title: 'Problem-Solving Skills' },\r\n    { title: 'Planning and Organizational Skills' },\r\n    { title: 'Data Analysis' },\r\n    { title: 'Adaptability' },\r\n    { title: 'ReactJs' },\r\n    { title: 'VueJs' },\r\n    { title: 'Sql Server' },\r\n    { title: \"Other\" }\r\n];\r\n\r\nconst level = [\r\n    { level: 'basic', point: '1' },\r\n    { level: 'intermediate', point: '3' },\r\n    { level: 'competently', point: '5' },\r\n];\r\n\r\nconst AddSkill = ({ index, load, handleDeleteSkill, arr }) => {\r\n\r\n    const initState = {\r\n        title: 'JavaScript',\r\n        point: '1'\r\n    }\r\n    const [data, setData] = useState(initState)\r\n\r\n    useEffect(() => {\r\n        if (!data) {\r\n            arr[index] = initState\r\n            setData(initState)\r\n            console.log('arr', arr)\r\n        }\r\n    }, [load])\r\n\r\n\r\n\r\n\r\n    const handleInput = (event) => {\r\n        arr[index] = { ...data, 'point': event.target.value }\r\n        setData({ ...data, 'point': event.target.value })\r\n        console.log(arr)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // if (!arrSkill[0]) {\r\n    //     //     arrSkill[0] = { 'skill': topSkill[0].title, 'level': level[0] }\r\n    //     // }\r\n    //     console.log(load)\r\n    // }, [])\r\n    return (\r\n\r\n        <div>\r\n            <Autocomplete\r\n                value={data}\r\n                onChange={(event, newValue) => {\r\n                    if (typeof newValue === 'string') {\r\n                        arr[index] = {\r\n                            ...data,\r\n                            title: newValue,\r\n                        }\r\n                        setData({\r\n                            ...data,\r\n                            title: newValue,\r\n                        });\r\n                    } else if (newValue && newValue.inputValue) {\r\n                        // Create a new value from the user input\r\n                        arr[index] = {\r\n                            ...data,\r\n                            title: newValue.inputValue,\r\n                        }\r\n                        setData({\r\n                            ...data,\r\n                            title: newValue.inputValue,\r\n                        });\r\n                    } else {\r\n                        arr[index] = { ...arr[index], 'title': newValue.title ? '' : newValue.title }\r\n                        setData(newValue);\r\n                    }\r\n                }}\r\n\r\n                filterOptions={(options, params) => {\r\n                    const filtered = filter(options, params);\r\n\r\n                    const { inputValue } = params;\r\n                    // Suggest the creation of a new value\r\n                    const isExisting = options.some((option) => inputValue === option.title);\r\n                    if (inputValue !== '' && !isExisting) {\r\n                        filtered.push({\r\n                            inputValue,\r\n                            title: `Add \"${inputValue}\"`,\r\n                        });\r\n                    }\r\n\r\n                    return filtered;\r\n                }}\r\n                selectOnFocus\r\n                clearOnBlur\r\n                handleHomeEndKeys\r\n                id=\"free-solo-with-text-demo\"\r\n                options={topSkill}\r\n                getOptionLabel={(option) => {\r\n                    // Value selected with enter, right from the input\r\n                    if (typeof option === 'string') {\r\n                        return option;\r\n                    }\r\n                    // Add \"xxx\" option created dynamically\r\n                    if (option.inputValue) {\r\n                        return option.inputValue;\r\n                    }\r\n                    // Regular option\r\n                    return option.title;\r\n                }}\r\n                renderOption={(props, option) => <li {...props}>{option.title}</li>}\r\n                sx={{ width: 300 }}\r\n                freeSolo\r\n                renderInput={(params) => (\r\n                    <TextField {...params} label=\"Free solo with text demo\" />\r\n                )}\r\n            />\r\n\r\n            {/* &emsp; */}\r\n            <NativeSelect id=\"select\"\r\n                onChange={handleInput}\r\n            >\r\n                {\r\n                    level.map(element => (\r\n                        <option value={element.point}>{element.level}</option>\r\n                    ))\r\n                }\r\n            </NativeSelect>\r\n            &emsp;\r\n            {index > 0 && <button type=\"button\" onClick={e => handleDeleteSkill(index)} class=\"btn btn-primary btn-save\">Delete</button>}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default AddSkill;",{"ruleId":"862","replacedBy":"863"},{"ruleId":"864","replacedBy":"865"},{"ruleId":"866","severity":1,"message":"867","line":33,"column":27,"nodeType":"868","messageId":"869","endLine":33,"endColumn":52},{"ruleId":"866","severity":1,"message":"870","line":18,"column":13,"nodeType":"868","messageId":"869","endLine":18,"endColumn":17},{"ruleId":"866","severity":1,"message":"871","line":1,"column":17,"nodeType":"868","messageId":"869","endLine":1,"endColumn":25},{"ruleId":"866","severity":1,"message":"872","line":4,"column":11,"nodeType":"868","messageId":"869","endLine":4,"endColumn":21},{"ruleId":"866","severity":1,"message":"873","line":22,"column":12,"nodeType":"868","messageId":"869","endLine":22,"endColumn":20},{"ruleId":"874","severity":1,"message":"875","line":28,"column":8,"nodeType":"876","endLine":28,"endColumn":30,"suggestions":"877"},{"ruleId":"866","severity":1,"message":"878","line":35,"column":11,"nodeType":"868","messageId":"869","endLine":35,"endColumn":23},{"ruleId":"866","severity":1,"message":"873","line":12,"column":12,"nodeType":"868","messageId":"869","endLine":12,"endColumn":20},{"ruleId":"874","severity":1,"message":"875","line":17,"column":8,"nodeType":"876","endLine":17,"endColumn":53,"suggestions":"879"},{"ruleId":"866","severity":1,"message":"880","line":15,"column":19,"nodeType":"868","messageId":"869","endLine":15,"endColumn":30},{"ruleId":"874","severity":1,"message":"875","line":22,"column":8,"nodeType":"876","endLine":22,"endColumn":38,"suggestions":"881"},{"ruleId":"866","severity":1,"message":"882","line":153,"column":15,"nodeType":"868","messageId":"869","endLine":153,"endColumn":24},{"ruleId":"866","severity":1,"message":"883","line":6,"column":10,"nodeType":"868","messageId":"869","endLine":6,"endColumn":25},{"ruleId":"884","severity":1,"message":"885","line":29,"column":30,"nodeType":"886","messageId":"887","endLine":29,"endColumn":32},{"ruleId":"874","severity":1,"message":"875","line":20,"column":8,"nodeType":"876","endLine":20,"endColumn":61,"suggestions":"888"},{"ruleId":"866","severity":1,"message":"889","line":13,"column":11,"nodeType":"868","messageId":"869","endLine":13,"endColumn":19},{"ruleId":"866","severity":1,"message":"890","line":44,"column":27,"nodeType":"868","messageId":"869","endLine":44,"endColumn":32},{"ruleId":"884","severity":1,"message":"885","line":96,"column":37,"nodeType":"886","messageId":"887","endLine":96,"endColumn":39},{"ruleId":"874","severity":1,"message":"891","line":107,"column":8,"nodeType":"876","endLine":107,"endColumn":21,"suggestions":"892"},{"ruleId":"893","severity":1,"message":"894","line":10,"column":17,"nodeType":"895","endLine":10,"endColumn":52},{"ruleId":"874","severity":1,"message":"896","line":17,"column":8,"nodeType":"876","endLine":17,"endColumn":10,"suggestions":"897"},{"ruleId":"893","severity":1,"message":"894","line":32,"column":17,"nodeType":"895","endLine":32,"endColumn":52},{"ruleId":"893","severity":1,"message":"894","line":20,"column":17,"nodeType":"895","endLine":20,"endColumn":52},{"ruleId":"898","severity":1,"message":"899","line":27,"column":41,"nodeType":"895","endLine":27,"endColumn":71},{"ruleId":"893","severity":1,"message":"894","line":24,"column":17,"nodeType":"895","endLine":24,"endColumn":52},{"ruleId":"884","severity":1,"message":"885","line":36,"column":34,"nodeType":"886","messageId":"887","endLine":36,"endColumn":36},{"ruleId":"874","severity":1,"message":"891","line":43,"column":5,"nodeType":"876","endLine":43,"endColumn":24,"suggestions":"900"},{"ruleId":"866","severity":1,"message":"901","line":11,"column":8,"nodeType":"868","messageId":"869","endLine":11,"endColumn":16},{"ruleId":"866","severity":1,"message":"902","line":22,"column":12,"nodeType":"868","messageId":"869","endLine":22,"endColumn":17},{"ruleId":"874","severity":1,"message":"903","line":12,"column":15,"nodeType":"886","endLine":14,"endColumn":6},{"ruleId":"874","severity":1,"message":"904","line":14,"column":8,"nodeType":"876","endLine":14,"endColumn":10,"suggestions":"905"},{"ruleId":"866","severity":1,"message":"906","line":4,"column":16,"nodeType":"868","messageId":"869","endLine":4,"endColumn":25},{"ruleId":"866","severity":1,"message":"907","line":6,"column":5,"nodeType":"868","messageId":"869","endLine":6,"endColumn":13},{"ruleId":"866","severity":1,"message":"908","line":10,"column":9,"nodeType":"868","messageId":"869","endLine":10,"endColumn":17},{"ruleId":"866","severity":1,"message":"909","line":26,"column":9,"nodeType":"868","messageId":"869","endLine":26,"endColumn":26},{"ruleId":"874","severity":1,"message":"910","line":18,"column":6,"nodeType":"876","endLine":18,"endColumn":12,"suggestions":"911"},{"ruleId":"874","severity":1,"message":"910","line":20,"column":6,"nodeType":"876","endLine":20,"endColumn":12,"suggestions":"912"},{"ruleId":"874","severity":1,"message":"891","line":53,"column":8,"nodeType":"876","endLine":53,"endColumn":27,"suggestions":"913"},{"ruleId":"866","severity":1,"message":"914","line":14,"column":27,"nodeType":"868","messageId":"869","endLine":14,"endColumn":43},{"ruleId":"884","severity":1,"message":"915","line":17,"column":29,"nodeType":"886","messageId":"887","endLine":17,"endColumn":31},{"ruleId":"884","severity":1,"message":"885","line":18,"column":32,"nodeType":"886","messageId":"887","endLine":18,"endColumn":34},{"ruleId":"874","severity":1,"message":"916","line":25,"column":8,"nodeType":"876","endLine":25,"endColumn":19,"suggestions":"917"},{"ruleId":"866","severity":1,"message":"906","line":3,"column":10,"nodeType":"868","messageId":"869","endLine":3,"endColumn":19},{"ruleId":"884","severity":1,"message":"885","line":22,"column":37,"nodeType":"886","messageId":"887","endLine":22,"endColumn":39},{"ruleId":"884","severity":1,"message":"885","line":28,"column":42,"nodeType":"886","messageId":"887","endLine":28,"endColumn":44},{"ruleId":"874","severity":1,"message":"918","line":34,"column":8,"nodeType":"876","endLine":34,"endColumn":27,"suggestions":"919"},{"ruleId":"866","severity":1,"message":"920","line":2,"column":8,"nodeType":"868","messageId":"869","endLine":2,"endColumn":12},{"ruleId":"866","severity":1,"message":"921","line":2,"column":17,"nodeType":"868","messageId":"869","endLine":2,"endColumn":27},{"ruleId":"866","severity":1,"message":"922","line":4,"column":10,"nodeType":"868","messageId":"869","endLine":4,"endColumn":14},{"ruleId":"866","severity":1,"message":"870","line":31,"column":20,"nodeType":"868","messageId":"869","endLine":31,"endColumn":24},{"ruleId":"866","severity":1,"message":"889","line":33,"column":8,"nodeType":"868","messageId":"869","endLine":33,"endColumn":16},{"ruleId":"884","severity":1,"message":"885","line":38,"column":37,"nodeType":"886","messageId":"887","endLine":38,"endColumn":39},{"ruleId":"874","severity":1,"message":"923","line":44,"column":5,"nodeType":"876","endLine":44,"endColumn":7,"suggestions":"924"},{"ruleId":"866","severity":1,"message":"925","line":46,"column":8,"nodeType":"868","messageId":"869","endLine":46,"endColumn":20},{"ruleId":"866","severity":1,"message":"926","line":1,"column":28,"nodeType":"868","messageId":"869","endLine":1,"endColumn":36},{"ruleId":"866","severity":1,"message":"927","line":1,"column":8,"nodeType":"868","messageId":"869","endLine":1,"endColumn":20},{"ruleId":"866","severity":1,"message":"928","line":2,"column":8,"nodeType":"868","messageId":"869","endLine":2,"endColumn":17},{"ruleId":"866","severity":1,"message":"929","line":54,"column":18,"nodeType":"868","messageId":"869","endLine":54,"endColumn":25},{"ruleId":"866","severity":1,"message":"930","line":55,"column":19,"nodeType":"868","messageId":"869","endLine":55,"endColumn":27},{"ruleId":"866","severity":1,"message":"909","line":76,"column":11,"nodeType":"868","messageId":"869","endLine":76,"endColumn":28},{"ruleId":"884","severity":1,"message":"885","line":87,"column":47,"nodeType":"886","messageId":"887","endLine":87,"endColumn":49},{"ruleId":"931","severity":1,"message":"932","line":94,"column":34,"nodeType":"933","messageId":"934","endLine":94,"endColumn":77,"fix":"935"},{"ruleId":"931","severity":1,"message":"936","line":94,"column":79,"nodeType":"933","messageId":"934","endLine":94,"endColumn":115,"fix":"937"},{"ruleId":"931","severity":1,"message":"938","line":94,"column":117,"nodeType":"933","messageId":"934","endLine":94,"endColumn":146,"fix":"939"},{"ruleId":"931","severity":1,"message":"940","line":94,"column":148,"nodeType":"933","messageId":"934","endLine":94,"endColumn":184,"fix":"941"},{"ruleId":"874","severity":1,"message":"942","line":96,"column":8,"nodeType":"876","endLine":96,"endColumn":10,"suggestions":"943"},{"ruleId":"884","severity":1,"message":"885","line":89,"column":42,"nodeType":"886","messageId":"887","endLine":89,"endColumn":44},{"ruleId":"874","severity":1,"message":"944","line":96,"column":8,"nodeType":"876","endLine":96,"endColumn":21,"suggestions":"945"},{"ruleId":"866","severity":1,"message":"946","line":91,"column":12,"nodeType":"868","messageId":"869","endLine":91,"endColumn":16},{"ruleId":"884","severity":1,"message":"885","line":100,"column":39,"nodeType":"886","messageId":"887","endLine":100,"endColumn":41},{"ruleId":"874","severity":1,"message":"947","line":107,"column":8,"nodeType":"876","endLine":107,"endColumn":22,"suggestions":"948"},{"ruleId":"884","severity":1,"message":"885","line":117,"column":41,"nodeType":"886","messageId":"887","endLine":117,"endColumn":43},{"ruleId":"893","severity":1,"message":"894","line":195,"column":29,"nodeType":"895","endLine":195,"endColumn":56},{"ruleId":"866","severity":1,"message":"949","line":18,"column":27,"nodeType":"868","messageId":"869","endLine":18,"endColumn":33},{"ruleId":"874","severity":1,"message":"950","line":33,"column":8,"nodeType":"876","endLine":33,"endColumn":32,"suggestions":"951"},{"ruleId":"866","severity":1,"message":"952","line":13,"column":12,"nodeType":"868","messageId":"869","endLine":13,"endColumn":24},{"ruleId":"884","severity":1,"message":"915","line":25,"column":29,"nodeType":"886","messageId":"887","endLine":25,"endColumn":31},{"ruleId":"884","severity":1,"message":"885","line":26,"column":36,"nodeType":"886","messageId":"887","endLine":26,"endColumn":38},{"ruleId":"884","severity":1,"message":"885","line":29,"column":43,"nodeType":"886","messageId":"887","endLine":29,"endColumn":45},{"ruleId":"874","severity":1,"message":"953","line":39,"column":8,"nodeType":"876","endLine":39,"endColumn":18,"suggestions":"954"},{"ruleId":"866","severity":1,"message":"955","line":12,"column":8,"nodeType":"868","messageId":"869","endLine":12,"endColumn":12},{"ruleId":"874","severity":1,"message":"956","line":44,"column":8,"nodeType":"876","endLine":44,"endColumn":45,"suggestions":"957"},{"ruleId":"862","replacedBy":"958"},{"ruleId":"864","replacedBy":"959"},{"ruleId":"874","severity":1,"message":"960","line":42,"column":8,"nodeType":"876","endLine":42,"endColumn":14,"suggestions":"961"},{"ruleId":"874","severity":1,"message":"960","line":42,"column":8,"nodeType":"876","endLine":42,"endColumn":14,"suggestions":"962"},"no-native-reassign",["963"],"no-negated-in-lhs",["964"],"no-unused-vars","'getListSubmitedForCompany' is defined but never used.","Identifier","unusedVar","'auth' is assigned a value but never used.","'Redirect' is defined but never used.","'firstLogin' is assigned a value but never used.","'dataUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectPage'. Either include it or remove the dependency array.","ArrayExpression",["965"],"'handleChange' is assigned a value but never used.",["966"],"'listCompany' is assigned a value but never used.",["967"],"'resAllJob' is assigned a value but never used.","'getListSubmited' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["968"],"'dispatch' is assigned a value but never used.","'theme' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["969"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["970"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["971"],"'AddSkill' is defined but never used.","'skill' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'auth' and 'dispatch'. Either include them or remove the dependency array.",["972"],"'useParams' is defined but never used.","'arrSkill' is assigned a value but never used.","'topSkill' is assigned a value but never used.","'onTagsChangeSkill' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'arr' and 'index'. Either include them or remove the dependency array. If 'setData' needs the current value of 'arr', you can also switch to useReducer instead of useState and read 'arr' in the reducer.",["973"],["974"],["975"],"'setShowFollowing' is assigned a value but never used.","Array.prototype.filter() expects a return value from arrow function.","React Hook useEffect has a missing dependency: 'allJob.jobs'. Either include it or remove the dependency array.",["976"],"React Hook useEffect has missing dependencies: 'allJob.jobs', 'allJob.searchJob', 'idCompany', and 'job._id'. Either include them or remove the dependency array.",["977"],"'Chip' is defined but never used.","'useContext' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'submited.submited.cv'. Either include them or remove the dependency array.",["978"],"'handleAccept' is assigned a value but never used.","'useState' is defined but never used.","'Autocomplete' is defined but never used.","'TextField' is defined but never used.","'setLogo' is assigned a value but never used.","'setImage' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['endDate'] found.","Property","unnecessarilyComputedProperty",{"range":"979","text":"980"},"Unnecessarily computed property ['companyName'] found.",{"range":"981","text":"982"},"Unnecessarily computed property ['infoCompany'] found.",{"range":"983","text":"984"},"Unnecessarily computed property ['companySize'] found.",{"range":"985","text":"986"},"React Hook useEffect has missing dependencies: 'auth.user._id', 'jobData', and 'listCompany.companies'. Either include them or remove the dependency array. You can also do a functional update 'setJobData(j => ...)' if you only need 'jobData' in the 'setJobData' call.",["987"],"React Hook useEffect has a missing dependency: 'auth.user._id'. Either include it or remove the dependency array.",["988"],"'post' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allJob.jobs' and 'auth'. Either include them or remove the dependency array.",["989"],"'socket' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkId' and 'job'. Either include them or remove the dependency array.",["990"],"'dataSubmited' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allJob.jobs', 'auth', and 'dispatch'. Either include them or remove the dependency array.",["991"],"'logo' is defined but never used.","React Hook useEffect has missing dependencies: 'checkId' and 'checkJob'. Either include them or remove the dependency array.",["992"],["963"],["964"],"React Hook useEffect has missing dependencies: 'arr', 'data', 'index', and 'initState'. Either include them or remove the dependency array.",["993"],["994"],"no-global-assign","no-unsafe-negation",{"desc":"995","fix":"996"},{"desc":"997","fix":"998"},{"desc":"999","fix":"1000"},{"desc":"1001","fix":"1002"},{"desc":"1003","fix":"1004"},{"desc":"1005","fix":"1006"},{"desc":"1007","fix":"1008"},{"desc":"1009","fix":"1010"},{"desc":"1011","fix":"1012"},{"desc":"1011","fix":"1013"},{"desc":"1007","fix":"1014"},{"desc":"1015","fix":"1016"},{"desc":"1017","fix":"1018"},{"desc":"1019","fix":"1020"},[2660,2671],"'endDate'",[2705,2720],"'companyName'",[2743,2758],"'infoCompany'",[2774,2789],"'companySize'",{"desc":"1021","fix":"1022"},{"desc":"1023","fix":"1024"},{"desc":"1025","fix":"1026"},{"desc":"1027","fix":"1028"},{"desc":"1029","fix":"1030"},{"desc":"1031","fix":"1032"},{"desc":"1033","fix":"1034"},{"desc":"1033","fix":"1035"},"Update the dependencies array to be: [dispatch, auth.token, selectPage]",{"range":"1036","text":"1037"},"Update the dependencies array to be: [dispatch, auth.token, listCompany.companies, selectPage]",{"range":"1038","text":"1039"},"Update the dependencies array to be: [dispatch, auth.token, allJob, selectPage]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [dispatch, auth.token, allJob.searchJob, allJob.jobs, selectPage]",{"range":"1042","text":"1043"},"Update the dependencies array to be: [allJob.jobs, id]",{"range":"1044","text":"1045"},"Update the dependencies array to be: [dispatch]",{"range":"1046","text":"1047"},"Update the dependencies array to be: [allResume.resumes, id]",{"range":"1048","text":"1049"},"Update the dependencies array to be: [auth, dispatch]",{"range":"1050","text":"1051"},"Update the dependencies array to be: [arr, index, load]",{"range":"1052","text":"1053"},{"range":"1054","text":"1053"},{"range":"1055","text":"1049"},"Update the dependencies array to be: [allJob.jobs, auth.user]",{"range":"1056","text":"1057"},"Update the dependencies array to be: [allJob.jobs, allJob.searchJob, allResume.resumes, idCompany, job._id]",{"range":"1058","text":"1059"},"Update the dependencies array to be: [id, submited.submited.cv]",{"range":"1060","text":"1061"},"Update the dependencies array to be: [auth.user._id, jobData, listCompany.companies]",{"range":"1062","text":"1063"},"Update the dependencies array to be: [allJob.jobs, auth.user._id]",{"range":"1064","text":"1065"},"Update the dependencies array to be: [allJob.jobs, auth, dispatch, id]",{"range":"1066","text":"1067"},"Update the dependencies array to be: [id, auth.token, allJob, checkId, job]",{"range":"1068","text":"1069"},"Update the dependencies array to be: [allJob.jobs, auth, dispatch, submited]",{"range":"1070","text":"1071"},"Update the dependencies array to be: [id, auth.token, listCompany, allJob, checkId, checkJob]",{"range":"1072","text":"1073"},"Update the dependencies array to be: [arr, data, index, initState, load]",{"range":"1074","text":"1075"},{"range":"1076","text":"1075"},[806,828],"[dispatch, auth.token, selectPage]",[626,671],"[dispatch, auth.token, listCompany.companies, selectPage]",[870,900],"[dispatch, auth.token, allJob, selectPage]",[716,769],"[dispatch, auth.token, allJob.searchJob, allJob.jobs, selectPage]",[3496,3509],"[allJob.jobs, id]",[486,488],"[dispatch]",[921,940],"[allResume.resumes, id]",[423,425],"[auth, dispatch]",[430,436],"[arr, index, load]",[421,427],[1767,1786],[926,937],"[allJob.jobs, auth.user]",[1239,1258],"[allJob.jobs, allJob.searchJob, allResume.resumes, idCompany, job._id]",[1000,1002],"[id, submited.submited.cv]",[2824,2826],"[auth.user._id, jobData, listCompany.companies]",[2848,2861],"[allJob.jobs, auth.user._id]",[3737,3751],"[allJob.jobs, auth, dispatch, id]",[950,974],"[id, auth.token, allJob, checkId, job]",[1428,1438],"[allJob.jobs, auth, dispatch, submited]",[1269,1306],"[id, auth.token, listCompany, allJob, checkId, checkJob]",[1145,1151],"[arr, data, index, initState, load]",[1161,1167]]